{
  "swagger": "2.0",
  "info": {
    "description": "Автоматизированная система ТЦМК и cлужбы скорой медицинской помощи.",
    "version": "Версия 2.0",
    "title": "АИС ТЦМК ЛО",
    "license": {
      "name": "АО 'НПП ТЕЛДА'",
      "url": "http://ru.telda.ru"
    }
  },
  "host": "172.16.6.166:8080",
  "basePath": "/tcmk",
  "tags": [
    {
      "name": "card-objective-controller",
      "description": "Карты вызова (объектив.данные/анамнез)"
    },
    {
      "name": "transport-controller",
      "description": "Транспортные средства"
    },
    {
      "name": "card-controller",
      "description": "Карты вызова"
    },
    {
      "name": "packaging-controller",
      "description": "Packaging Controller"
    },
    {
      "name": "imitation-controller",
      "description": "Имитация"
    },
    {
      "name": "pharmacy-counterparty-controller",
      "description": "Контрагенты аптеки"
    },
    {
      "name": "calendar-controller",
      "description": "Календарь"
    },
    {
      "name": "brigade-controller",
      "description": "Бригады"
    },
    {
      "name": "unit-controller",
      "description": "Unit Controller"
    },
    {
      "name": "document-nomenclature-controller",
      "description": "Document Nomenclature Controller"
    },
    {
      "name": "pharmacy-controller",
      "description": "Аптека"
    },
    {
      "name": "report-group-controller",
      "description": "Report Group Controller"
    },
    {
      "name": "map-controller",
      "description": "Карта"
    },
    {
      "name": "inventory-nomenclature-controller",
      "description": "Inventory Nomenclature Controller"
    },
    {
      "name": "group-bag-item-controller",
      "description": "Составляющие группы сумки"
    },
    {
      "name": "place-controller",
      "description": "Place Controller"
    },
    {
      "name": "skill-controller",
      "description": "Сотрудники (специализации)"
    },
    {
      "name": "subdivision-type-controller",
      "description": "Подразделения (типы)"
    },
    {
      "name": "inquirer-controller",
      "description": "Опросник"
    },
    {
      "name": "mobile-controller",
      "description": "Mobile Controller"
    },
    {
      "name": "admin-controller",
      "description": "Роли"
    },
    {
      "name": "routing-controller",
      "description": "Маршрутизация"
    },
    {
      "name": "chat-controller",
      "description": "Чат"
    },
    {
      "name": "therapy-template-controller",
      "description": "Шаблоны терапии"
    },
    {
      "name": "pharmacy-group-reference-controller",
      "description": "Препараты и материалы по групировке"
    },
    {
      "name": "bag-controller",
      "description": "Сумки"
    },
    {
      "name": "transport-type-controller",
      "description": "Транспортные средства (типы)"
    },
    {
      "name": "hospital-controller",
      "description": "Больницы"
    },
    {
      "name": "bag-item-controller",
      "description": "Составляющие сумки"
    },
    {
      "name": "document-controller",
      "description": "Document Controller"
    },
    {
      "name": "pharmacy-matrix-group-controller",
      "description": "Группы матрицы препаратов и материалов"
    },
    {
      "name": "therapy-controller",
      "description": "Терапия"
    },
    {
      "name": "product-type-controller",
      "description": "Product Type Controller"
    },
    {
      "name": "pharmacy-group-controller",
      "description": "Группы препаратов и материалов"
    },
    {
      "name": "pharmacy-matrix-controller",
      "description": "Матрицы препаратов и материалов"
    },
    {
      "name": "subdivision-controller",
      "description": "Подразделения"
    },
    {
      "name": "brigade-type-controller",
      "description": "Бригады (типы)"
    },
    {
      "name": "inventory-controller",
      "description": "Inventory Controller"
    },
    {
      "name": "map-proxy-controller",
      "description": "Адресный сервис"
    },
    {
      "name": "district-controller",
      "description": "Районы"
    },
    {
      "name": "report-docx-4-g-controller",
      "description": "Report Docx 4 G Controller"
    },
    {
      "name": "product-controller",
      "description": "Product Controller"
    },
    {
      "name": "chat-messages-controller",
      "description": "Чат сообщения"
    },
    {
      "name": "bag-matrix-item-controller",
      "description": "Составляющие сумки"
    },
    {
      "name": "card-result-controller",
      "description": "Карты вызова (результаты)"
    },
    {
      "name": "fias-controller",
      "description": "Справочник ФИАС"
    },
    {
      "name": "pharmacy-matrix-item-controller",
      "description": "Компоненты матрицы"
    },
    {
      "name": "pharmacy-material-reference-controller",
      "description": "Материалы мед. назначения"
    },
    {
      "name": "call-controller",
      "description": "Call Controller"
    },
    {
      "name": "inform-controller",
      "description": "Помощь (справка)"
    },
    {
      "name": "fias-address-controller",
      "description": "Справочник ФИАС"
    },
    {
      "name": "transport-class-controller",
      "description": "Транспортные средства (классы)"
    },
    {
      "name": "config-controller",
      "description": "Конфигурации"
    },
    {
      "name": "report-controller",
      "description": "Report Controller"
    },
    {
      "name": "security-controller",
      "description": "Security Controller"
    },
    {
      "name": "drug-reference-controller",
      "description": "Препараты"
    },
    {
      "name": "log-controller",
      "description": "Логи (история изменений)"
    },
    {
      "name": "performer-controller",
      "description": "Сотрудники"
    },
    {
      "name": "pharmacy-document-controller",
      "description": "Документы"
    },
    {
      "name": "reference-type-controller",
      "description": "Референсные данные"
    },
    {
      "name": "notification-controller",
      "description": "Уведомления"
    },
    {
      "name": "performer-type-controller",
      "description": "Сотрудники (типы)"
    },
    {
      "name": "therapy-template-item-controller",
      "description": "Компоненты шаблонов терапии"
    }
  ],
  "paths": {
    "/admin/logs": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "[CREATE] роли -> получение списка пользователей по роли",
        "operationId": "getLogsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "query",
            "description": "subId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "action",
            "in": "query",
            "description": "action",
            "required": false,
            "type": "string",
            "enum": [
              "LOGIN",
              "LOGIN_FAILURE",
              "LOGOUT"
            ]
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "date_from",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "date_to",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/admin/roles": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "[READ] роли -> получение списка всех ролей",
        "operationId": "readAllUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "[CREATE] роли -> создание новой роли",
        "operationId": "createUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "role",
            "description": "role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/admin/roles/{id}": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "[READ] роли -> получение роли по id",
        "operationId": "readOneUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "admin-controller"
        ],
        "summary": "[UPDATE] роли -> изменение роли",
        "operationId": "updateUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "role",
            "description": "role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/admin/roles/{id}/performers": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "[CREATE] роли -> получение списка пользователей по роли",
        "operationId": "getPerformersUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/admin/roles/{id}/permissions": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "[CREATE] роли -> получение структуры прав и разрешений ",
        "operationId": "createUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "admin-controller"
        ],
        "summary": "[CREATE] роли -> обновление прав и разрешений",
        "operationId": "createPermissionsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "permissions",
            "description": "permissions",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/brigade_types": {
      "get": {
        "tags": [
          "brigade-type-controller"
        ],
        "summary": "возвращает список типов бригад",
        "operationId": "readAllUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "query",
            "description": "subId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrigadeTypeDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "brigade-type-controller"
        ],
        "summary": "создание нового типа бригад",
        "operationId": "createUsingPOST_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrigadeTypeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeTypeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/brigade_types/{id}": {
      "get": {
        "tags": [
          "brigade-type-controller"
        ],
        "summary": "возвращает тип бригад по id",
        "operationId": "readOneUsingGET_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeTypeDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "brigade-type-controller"
        ],
        "summary": "обновление сведений о типе бригад",
        "operationId": "updateUsingPUT_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrigadeTypeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeTypeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/brigades": {
      "get": {
        "tags": [
          "brigade-controller"
        ],
        "summary": "DEPRECATED возвращает список бригад по заданным параметрам",
        "operationId": "readAllUsingGET_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "subdivisionId",
            "in": "query",
            "description": "subdivisionId",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrigadeDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "brigade-controller"
        ],
        "summary": "создание новой бригады",
        "operationId": "createUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrigadeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/brigades/{id}": {
      "get": {
        "tags": [
          "brigade-controller"
        ],
        "summary": "возвращает бригаду по id",
        "operationId": "readOneUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "brigade-controller"
        ],
        "summary": "обновление сведений о бригаде кроме статуса",
        "operationId": "updateUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrigadeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/brigades/{id}/performers": {
      "get": {
        "tags": [
          "brigade-controller"
        ],
        "summary": "[READ] бригада -> сотрудники",
        "operationId": "readPerformersInBrigadeUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PerformerDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "возвращает список карт вызова в подразделении",
        "operationId": "readAllUsingGET_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "description": "mode",
            "required": false,
            "type": "string",
            "default": "ALL"
          },
          {
            "name": "subId",
            "in": "query",
            "description": "subId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardGridDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/mkb": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "возвращает список записей МКБ 10 по текстовому поиску в коде/названии",
        "operationId": "findMkbListUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "s",
            "in": "query",
            "description": "s",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MkbDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/mkb/{id}": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "возвращает вложенные записи МКБ 10 по id parent-записи",
        "operationId": "readMkbListUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MkbDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/request": {
      "post": {
        "tags": [
          "card-controller"
        ],
        "summary": "возвращает список карт вызова по заданным параметрам поиска",
        "operationId": "readAllUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subdivisionId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "number",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "declarantName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "declarantPhone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "patientName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "patientSex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "patientAgeYears",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "patientAgeMonths",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "patientAgeDays",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "incidentAoName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "incidentDistrictId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "performer",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "declarantTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callPlaceTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "reasonTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardGridDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/side_one/inquirer": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> первая сторона -> опросник",
        "operationId": "readOneUsingGET_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InquirerInCallDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/side_one/reasons/fast": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> первая сторона -> быстрые поводы к вызову",
        "operationId": "readBasicReasonsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InquirerInCallDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}": {
      "delete": {
        "tags": [
          "card-controller"
        ],
        "summary": "[DELETE] аннулирование карты вызова.",
        "operationId": "updateResultIllegalActionsPartUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "message",
            "description": "message",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/cards/{cardId}/get_from_archive": {
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": " [CREATE] карта вызова -> изъять из архива",
        "operationId": "returnToVerifyUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "comment",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardSideOneDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/inventories": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> укладка",
        "operationId": "readAllШnventoryUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultIllegalActionsDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/protocol": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> протокол",
        "operationId": "readProtocolUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат",
        "operationId": "readCardResultUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": " [UPDATE] карта вызова -> результат",
        "operationId": "updateResultUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultDtoFLAT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultDtoFLAT"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result/active_visit": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> активное посещение",
        "operationId": "readCardResultActiveVisitPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultActiveVisitDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> результат -> активное посещение",
        "operationId": "updateResultActiveVisitPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultActiveVisitDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultActiveVisitDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result/assistance_result": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> результат мероприятий",
        "operationId": "readAssistanceResultPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultTypeDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> результат мероприятий",
        "operationId": "updateAssistanceResultPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultAssistanceResultDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultTypeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result/comments": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> Примечания",
        "operationId": "readCardResultCommentsPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultIllegalActionsDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> результат -> примечания",
        "operationId": "updateResultCommentsPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultCommentsDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultIllegalActionsDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result/death": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> смерть",
        "operationId": "readDeathPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultTypeDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> смерть",
        "operationId": "updateDeathPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultDeathDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultTypeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result/diagnosis": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> диагноз",
        "operationId": "readCardResultDiagnosisPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultDiagnosisDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> результат -> диагноз",
        "operationId": "updateResultDiagnosisPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultDiagnosisDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultDiagnosisDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result/ekg": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> ЭКГ",
        "operationId": "readCardResultEkgPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultEkg"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> результат -> экг",
        "operationId": "updateResultEkgPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultEkg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultEkg"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result/ekg_after": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> ЭКГ после мероприятий",
        "operationId": "readCardResultEkgAfterPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultEkg"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> результат -> экг после мероприятий",
        "operationId": "updateResultEkgAfterPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultEkg"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultEkg"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result/illegal_actions": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> противоправные действия",
        "operationId": "readCardResultIllegalActionsPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultIllegalActionsDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> результат -> противоправные действия",
        "operationId": "updateResultIllegalActionsPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultIllegalActionsDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultIllegalActionsDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result/local_efficiency_assistance": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> эффективность мероприятий на месте",
        "operationId": "readCardResultLocalEfficiencyAssistancePartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultTypeDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> эффективность мероприятий на месте",
        "operationId": "updateCardResultLocalEfficiencyAssistancePartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultEfficiencyAssistance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultTypeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result/materials": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> расходные материалы",
        "operationId": "readCardResultMaterialsPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultMaterialsDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> результат -> материалы",
        "operationId": "updateResultMaterialsPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultMaterialsDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultMaterialsDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result/reason": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> причина",
        "operationId": "readCardResultReasonPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultReasonDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> результат -> причина",
        "operationId": "updateResultReasonPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultReasonDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultReasonDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result/therapy": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> терапия",
        "operationId": "readCardResultМyPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultTherapyPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> результат -> терапия",
        "operationId": "updateResultTherapyPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultTherapyPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultTherapyPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result/transfer_patient": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> передача спец. бригаде",
        "operationId": "readTransferPatientPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultTypeDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> передача спец. бригаде",
        "operationId": "updateTransferPatientPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultTransferPatientDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultTypeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result/transport_efficiency_assistance": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> эффективность мероприятий в машине",
        "operationId": "readCardResultTransportEfficiencyAssistancePartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultTypeDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> эффективность мероприятий в машине",
        "operationId": "updateCardResultTransportEfficiencyAssistancePartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultEfficiencyAssistance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultTypeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result/transporting": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> транспортировка",
        "operationId": "readCardResultTransportingPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultTransportingDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> результат -> транспортировка",
        "operationId": "updateResultTransportingPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultTransportingDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultTransportingDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/result/type": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> результат -> тип результата",
        "operationId": "readCardResultTypePartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultTypeDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> результат -> тип результата",
        "operationId": "updateResultTypePartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultTypeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultTypeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/set_to_archive": {
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": " [CREATE] карта вызова -> передать в архив",
        "operationId": "setToArchiveUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardSideOneDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/set_to_unfilled": {
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": " [CREATE] карта вызова -> вернуть сотруднику",
        "operationId": "returnToUndilledUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "comment",
            "description": "comment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardSideOneDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/set_to_verify": {
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": " [CREATE] карта вызова -> передать на проверку",
        "operationId": "setVerifiedUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardBrigadeDoctorPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_one": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> первая сторона",
        "operationId": "readSideOneUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardSideOneDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_one/general": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> первая сторона -> основные сведения",
        "operationId": "readSideOneGeneralPartUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardGeneralPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_one/general/basic_dates": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "[READ] карта вызова -> первая сторона -> временные этапы",
        "operationId": "getBasicDatesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardBasicDatesPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": " [UPDATE] карта вызова -> первая сторона -> основные данные -> временные этапы",
        "operationId": "updateBasicDatesUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardBasicDatesPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardBasicDatesPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_one/general/brigade_doctor": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "[READ] карта вызова -> первая сторона -> ответственный врач бригады",
        "operationId": "getBrigadeDoctorInfoUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardBrigadeDoctorPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_one/general/shift_senior_doctor": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "[READ] карта вызова -> первая сторона -> старший врач смены",
        "operationId": "getShiftSeniorDoctorInfoUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardShiftSeniorDoctorPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_one/general/subdivision_head_doctor": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "[READ] карта вызова -> первая сторона -> заведущий отделением",
        "operationId": "getSubdivisionHeadDoctorInfoUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardSubdivisionHeadDoctorPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_one/patient": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> первая сторона -> пациент",
        "operationId": "readSideOnePatientPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardPatientPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> первая сторона -> пациент",
        "operationId": "updatePatientPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardPatientPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardPatientPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона",
        "operationId": "readSideTwoUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardSideTwoDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/anamnesis": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> анамнез",
        "operationId": "readSideTwoAnamnesisUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardAnamnesisPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> анамнез",
        "operationId": "updateAnamnesisUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardAnamnesisPartDtoFLAT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardAnamnesisPartDtoFLAT"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/anamnesis/allergic": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> анамнез -> аллергический",
        "operationId": "readCardAnamnesisAllergicUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardAnamnesisAllergicPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> анамнез -> аллергический",
        "operationId": "updateAllergicUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardAnamnesisAllergicPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardAnamnesisAllergicPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/anamnesis/complaints": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> анамнез -> жалобы",
        "operationId": "readCardAnamnesisComplaintsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardAnamnesisComplaintsPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> анамнез -> жалобы",
        "operationId": "updateComplaintsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardAnamnesisComplaintsPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardAnamnesisComplaintsPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/anamnesis/epidemic": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> анамнез -> эпидемиологический",
        "operationId": "readSideTwoAnamnesisEpidemicUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardAnamnesisEpidemicPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> анамнез -> эпидемиологический",
        "operationId": "updateEpidemicUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardAnamnesisEpidemicPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardAnamnesisEpidemicPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/anamnesis/gynecologic": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> анамнез -> гинекологический",
        "operationId": "readCardAnamnesisGynecologicUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardAnamnesisGynecologicPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> анамнез -> гинекологический",
        "operationId": "updateGynecologicUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardAnamnesisGynecologicPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardAnamnesisGynecologicPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/anamnesis/illnes": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> анамнез -> заболевания",
        "operationId": "readCardAnamnesisIllnesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardAnamnesisIllnesPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> анамнез -> заболевания",
        "operationId": "updateIllnesUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardAnamnesisIllnesPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardAnamnesisIllnesPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объек.данные",
        "operationId": "readSideTwoObjectivesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectivePartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные",
        "operationId": "updateCardObjectiveUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectivePartDtoFLAT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectivePartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/addition": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> дополнительные данные",
        "operationId": "readSideTwoObjectivesAdditionUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveAdditionPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> дополнительные данные",
        "operationId": "updateAdditionsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveAdditionPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveAdditionPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/alcohol": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> призн.алк.опьянения",
        "operationId": "readCardObjectiveIAlcoUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveAlcoPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> призн.алк.опьянения",
        "operationId": "updateAlcoholUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveAlcoPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveAlcoPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/breath": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> дыхание",
        "operationId": "readSideTwoObjectivesBreathUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveBreathPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> дыхание",
        "operationId": "updateBreathUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveBreathPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveBreathPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/complications": {
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> осложнения",
        "operationId": "updateComplicationsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveComplicationsPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveComplicationsPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/diuresis": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> диурез",
        "operationId": "readSideTwoObjectivesDiuresisUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveDiuresisPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> диурез",
        "operationId": "updateDiuresisUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveDiuresisPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveDiuresisPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/dyspeptic": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> дисп.явления",
        "operationId": "readSideTwoObjectivesDyspepticUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveDyspepticPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> дисп.явления",
        "operationId": "updateDyspepticUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveDyspepticPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveDyspepticPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/edema": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> отеки",
        "operationId": "readSideTwoObjectivesEdemaUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveEdemaPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> отеки",
        "operationId": "updateEdemaUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveEdemaPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveEdemaPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/excreta": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> анамнез-> cтул и мочеиспускание",
        "operationId": "readSideTwoAnamnesisExcretaUrineUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveExcretaUrinePartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> анамнез -> стул и мочеиспускание",
        "operationId": "updateExcretaUrineUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveExcretaUrinePartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveExcretaUrinePartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/general_state": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> общ.состояние",
        "operationId": "readSideTwoObjectivesGeneralUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveGeneralStatePartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> общ.состояние",
        "operationId": "updateCardObjectiveGeneralUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveGeneralStatePartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveGeneralStatePartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/glasgow": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> GLASGOW",
        "operationId": "readSideTwoObjectivesGlasgowUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveGlasgowPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> GLASGOW",
        "operationId": "updateAdditionsUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveGlasgowPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveGlasgowPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/heart": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> сердце",
        "operationId": "readSideTwoObjectivesHeartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveHeartPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> сердце",
        "operationId": "updateHeartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveHeartPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveHeartPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/hemodynamics": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> анамнез -> гемодинамика",
        "operationId": "readCardAnamnesisHemodynamicsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardAnamnesisHemodynamicsPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> анамнез -> гемодинамика",
        "operationId": "updateHemodynamicsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardAnamnesisHemodynamicsPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardAnamnesisHemodynamicsPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/liver": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> печень",
        "operationId": "readSideTwoObjectivesLiverUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveLiverPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> печень",
        "operationId": "updateLiverUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveLiverPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveLiverPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/lymph": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные - -> лимф.узлы",
        "operationId": "readSideTwoObjectivesLymphUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveLymphPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> лимф.узлы",
        "operationId": "updateLymphUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveLymphPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveLymphPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/other": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> другие показания",
        "operationId": "readSideTwoObjectivesOtherUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveOtherPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> другие показания",
        "operationId": "updateOtherUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveOtherPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveOtherPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/perc": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> перкуторно",
        "operationId": "readSideTwoObjectivesPercUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectivePercPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> перкуторно",
        "operationId": "updatePercUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectivePercPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectivePercPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/pupils": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные --> зрачки",
        "operationId": "readSideTwoObjectivesPupilsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectivePupilsDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> зрачки",
        "operationId": "updatePupilsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectivePupilsDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectivePupilsDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/reflexes": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> рефлексы",
        "operationId": "readSideTwoObjectivesReflexesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveReflexesDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> рефлексы",
        "operationId": "updateCardObjectiveGeneralUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveReflexesDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveReflexesDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/skin": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> кож.покровы",
        "operationId": "readSideTwoObjectivesSkinUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveSkinPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> кож.покровы",
        "operationId": "updateSkinUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveSkinPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveSkinPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/stomach": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> живот",
        "operationId": "readSideTwoObjectivesStomachUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveStomachPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> живот",
        "operationId": "updateStomachUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveStomachPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveStomachPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/throat": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> слиз.зева",
        "operationId": "readSideTwoObjectivesThroatUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveThroatPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> слиз.зева",
        "operationId": "updateThroatUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveThroatPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveThroatPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/tongue": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> язык",
        "operationId": "readSideTwoObjectivesTongueUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveTonguePart"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> язык",
        "operationId": "updateTongueUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveTonguePart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveTonguePart"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/tonsils": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> миндалины",
        "operationId": "readSideTwoObjectivesTonsilsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveTonsilsPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> миндалины",
        "operationId": "updateTonsilsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveTonsilsPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveTonsilsPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{cardId}/side_two/objectives/wheezing": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": "карта вызова -> вторая сторона -> объект.данные -> хрипы",
        "operationId": "readSideTwoObjectivesWheezingUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveWheezingPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-controller"
        ],
        "summary": "[UPDATE] карта вызова -> вторая сторона -> объект.данные -> хрипы",
        "operationId": "updateWheezingUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectiveWheezingPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectiveWheezingPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards/{card_id}/side_one/state/{activityId}/protocol": {
      "get": {
        "tags": [
          "card-controller"
        ],
        "summary": " карта вызова -> состояние -> протокол",
        "operationId": "readStateProtocolUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "activityId",
            "in": "path",
            "description": "activityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cards_objective/{id}": {
      "get": {
        "tags": [
          "card-objective-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectivePartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-objective-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardObjectivePartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardObjectivePartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/chat_messages": {
      "get": {
        "tags": [
          "chat-messages-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "chatId",
            "in": "query",
            "description": "chatId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "chat-messages-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "chatMessage",
            "description": "chatMessage",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChatMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChatMessage"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/chat_messages/{id}": {
      "get": {
        "tags": [
          "chat-messages-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_10",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChatMessage"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "chat-messages-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "chatMessage",
            "description": "chatMessage",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChatMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ChatMessage"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/chats": {
      "get": {
        "tags": [
          "chat-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Chat"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "chat-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "chat",
            "description": "chat",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Chat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Chat"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/chats/places": {
      "get": {
        "tags": [
          "chat-controller"
        ],
        "summary": "readAllPlaces",
        "operationId": "readAllPlacesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TreeNode"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/chats/{id}": {
      "get": {
        "tags": [
          "chat-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Chat"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "chat-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "chat",
            "description": "chat",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Chat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Chat"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/chats/{id}/performers/{performerId}": {
      "put": {
        "tags": [
          "chat-controller"
        ],
        "summary": "previewUnreadMessages",
        "operationId": "previewUnreadMessagesUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "performerId",
            "in": "path",
            "description": "performerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/config": {
      "get": {
        "tags": [
          "config-controller"
        ],
        "summary": "read",
        "operationId": "readUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Config"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/districts": {
      "get": {
        "tags": [
          "district-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_10",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "with_geom",
            "in": "query",
            "description": "with_geom",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DistrictDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "district-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DistrictDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DistrictDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/districts/by_code/{code}": {
      "get": {
        "tags": [
          "district-controller"
        ],
        "summary": "readOneByCode",
        "operationId": "readOneByCodeUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DistrictDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/districts/by_fiasId/{id}": {
      "get": {
        "tags": [
          "district-controller"
        ],
        "summary": "readOneByFiasId",
        "operationId": "readOneByFiasIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DistrictDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/districts/{id}": {
      "get": {
        "tags": [
          "district-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DistrictDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "district-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_10",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DistrictDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DistrictDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/document_nomenclatures": {
      "get": {
        "tags": [
          "document-nomenclature-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_12",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "document_id",
            "in": "query",
            "description": "document_id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentNomenclature"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "document-nomenclature-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_10",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "documentNomenclature",
            "description": "documentNomenclature",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentNomenclature"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentNomenclature"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/document_nomenclatures/{id}": {
      "get": {
        "tags": [
          "document-nomenclature-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_13",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentNomenclature"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "document-nomenclature-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_12",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "documentNomenclature",
            "description": "documentNomenclature",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentNomenclature"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentNomenclature"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "document-nomenclature-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentNomenclature"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/documents": {
      "get": {
        "tags": [
          "document-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "is_archived",
            "in": "query",
            "description": "is_archived",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Document"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "document-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accept",
            "in": "query",
            "description": "accept",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "in": "body",
            "name": "document",
            "description": "document",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/documents/remove_accept/{id}": {
      "get": {
        "tags": [
          "document-controller"
        ],
        "summary": "removeAccept",
        "operationId": "removeAcceptUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/documents/{id}": {
      "get": {
        "tags": [
          "document-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_12",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "document-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accept",
            "in": "query",
            "description": "accept",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "in": "body",
            "name": "document",
            "description": "document",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "document-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/documents/{id}/archive": {
      "get": {
        "tags": [
          "document-controller"
        ],
        "summary": "archived",
        "operationId": "archivedUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "archived",
            "in": "query",
            "description": "archived",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/drugs": {
      "get": {
        "tags": [
          "drug-reference-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_13",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "s",
            "in": "query",
            "description": "s",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DrugDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/drugs/codes": {
      "get": {
        "tags": [
          "drug-reference-controller"
        ],
        "summary": "readAllCodes",
        "operationId": "readAllCodesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "s",
            "in": "query",
            "description": "s",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Code"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/drugs/{id}": {
      "get": {
        "tags": [
          "drug-reference-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_14",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyReferenceItem"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fias/aos": {
      "get": {
        "tags": [
          "fias-controller"
        ],
        "summary": "readAllAddressObject",
        "operationId": "readAllAddressObjectUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "diId",
            "in": "query",
            "description": "diId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "query",
            "in": "query",
            "description": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AddressObject"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fias/districts": {
      "get": {
        "tags": [
          "fias-controller"
        ],
        "summary": "readAllDistrict",
        "operationId": "readAllDistrictUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/District"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fias/districts/{id}": {
      "get": {
        "tags": [
          "fias-controller"
        ],
        "summary": "readOneDistrict",
        "operationId": "readOneDistrictUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/District"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fias/find_district": {
      "get": {
        "tags": [
          "fias-controller"
        ],
        "summary": "findDistrict",
        "operationId": "findDistrictUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "aoId",
            "in": "query",
            "description": "aoId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/District"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fias/{address_objectId}/houses": {
      "get": {
        "tags": [
          "fias-controller"
        ],
        "summary": "cписок домов, принадлежащих address object",
        "operationId": "readHousesByAOidUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "address_objectId",
            "in": "path",
            "description": "address_objectId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CardAddressHouseDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fias/{address_objectId}/houses/{house_number}": {
      "get": {
        "tags": [
          "fias-controller"
        ],
        "summary": "cписок корпусов, принадлежащих address object",
        "operationId": "readStructuresByhouseIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "address_objectId",
            "in": "path",
            "description": "address_objectId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CardAddressHouseDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fias2/address/complete": {
      "post": {
        "tags": [
          "fias-address-controller"
        ],
        "summary": "completeAddress",
        "operationId": "completeAddressUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CallFiasAddressDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallFiasAddressDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fias2/countries": {
      "get": {
        "tags": [
          "fias-address-controller"
        ],
        "summary": "readAllCountries",
        "operationId": "readAllCountriesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "q",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FiasAddressObjectDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fias2/districts": {
      "get": {
        "tags": [
          "fias-address-controller"
        ],
        "summary": "readAllDistrict",
        "operationId": "readAllDistrictUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "q",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_code",
            "in": "query",
            "description": "region_code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FiasAddressObjectDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fias2/houses": {
      "get": {
        "tags": [
          "fias-address-controller"
        ],
        "summary": "readAllHouses",
        "operationId": "readAllHousesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "number",
            "in": "query",
            "description": "number",
            "required": false,
            "type": "string"
          },
          {
            "name": "building",
            "in": "query",
            "description": "building",
            "required": false,
            "type": "string"
          },
          {
            "name": "structure",
            "in": "query",
            "description": "structure",
            "required": false,
            "type": "string"
          },
          {
            "name": "settlement_code",
            "in": "query",
            "description": "settlement_code",
            "required": false,
            "type": "string"
          },
          {
            "name": "street_code",
            "in": "query",
            "description": "street_code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FiasAddressHouseDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fias2/regions": {
      "get": {
        "tags": [
          "fias-address-controller"
        ],
        "summary": "readAllRegions",
        "operationId": "readAllRegionsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "q",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FiasAddressObjectDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fias2/settlements": {
      "get": {
        "tags": [
          "fias-address-controller"
        ],
        "summary": "readAllSettlements",
        "operationId": "readAllSettlementsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "q",
            "required": true,
            "type": "string"
          },
          {
            "name": "region_code",
            "in": "query",
            "description": "region_code",
            "required": true,
            "type": "string"
          },
          {
            "name": "district_code",
            "in": "query",
            "description": "district_code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FiasAddressObjectDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/fias2/streets": {
      "get": {
        "tags": [
          "fias-address-controller"
        ],
        "summary": "readAllStreets",
        "operationId": "readAllStreetsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "q",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_code",
            "in": "query",
            "description": "region_code",
            "required": true,
            "type": "string"
          },
          {
            "name": "district_code",
            "in": "query",
            "description": "district_code",
            "required": true,
            "type": "string"
          },
          {
            "name": "settlement_code",
            "in": "query",
            "description": "settlement_code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FiasAddressObjectDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/help/manual": {
      "get": {
        "tags": [
          "inform-controller"
        ],
        "summary": "getManual",
        "operationId": "getManualUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/hospitals": {
      "get": {
        "tags": [
          "hospital-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_15",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "parId",
            "in": "query",
            "description": "parId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HospitalDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "hospital-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HospitalDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HospitalDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/hospitals/{id}": {
      "get": {
        "tags": [
          "hospital-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_15",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubdivisionFlatDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "hospital-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_13",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HospitalDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HospitalDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/imitation/112create": {
      "get": {
        "tags": [
          "imitation-controller"
        ],
        "summary": "create112",
        "operationId": "create112UsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/imitation/nezabudka/calls/find": {
      "get": {
        "tags": [
          "imitation-controller"
        ],
        "summary": "createNezabudka",
        "operationId": "createNezabudkaUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "query",
            "description": "phone",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CallGridDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/imitation/routing": {
      "get": {
        "tags": [
          "imitation-controller"
        ],
        "summary": "routing",
        "operationId": "routingUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "turn_on",
            "in": "query",
            "description": "turn_on",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/inquirer": {
      "post": {
        "tags": [
          "inquirer-controller"
        ],
        "summary": "опросник -> запись",
        "operationId": "updateObjectUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InquirerDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InquirerDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/inquirer/create/{parentId}": {
      "get": {
        "tags": [
          "inquirer-controller"
        ],
        "summary": "опросник -> запись - > новая",
        "operationId": "getCreateUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "description": "parentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InquirerDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/inquirer/tree": {
      "get": {
        "tags": [
          "inquirer-controller"
        ],
        "summary": "опросник в виде дерева",
        "operationId": "readTreeUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "parentId",
            "in": "query",
            "description": "parentId",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InquirerTreeNode"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/inquirer/{id}": {
      "get": {
        "tags": [
          "inquirer-controller"
        ],
        "summary": "опросник -> запись",
        "operationId": "readObjectUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InquirerDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "inquirer-controller"
        ],
        "summary": "[UPDATE] опросник -> запись",
        "operationId": "updateObjectUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InquirerDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InquirerDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "inquirer-controller"
        ],
        "summary": "[UPDATE] опросник -> запись",
        "operationId": "deleteObjectReasonUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Inquirer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/inventories": {
      "get": {
        "tags": [
          "inventory-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_16",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "place_id",
            "in": "query",
            "description": "place_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "product_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Inventory"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "inventory-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_12",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "inventory",
            "description": "inventory",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Inventory"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/inventories/for_product_and_place": {
      "get": {
        "tags": [
          "inventory-controller"
        ],
        "summary": "readOneForProductAndPlace",
        "operationId": "readOneForProductAndPlaceUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "place_id",
            "in": "query",
            "description": "place_id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "product_id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Inventory"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/inventories/movements": {
      "get": {
        "tags": [
          "inventory-controller"
        ],
        "summary": "getMovementOfInventory",
        "operationId": "getMovementOfInventoryUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "inventory_id",
            "in": "query",
            "description": "inventory_id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductMove"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/inventories/{id}": {
      "get": {
        "tags": [
          "inventory-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_16",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Inventory"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "inventory-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_14",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "inventory",
            "description": "inventory",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Inventory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Inventory"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/inventory_nomenclatures": {
      "get": {
        "tags": [
          "inventory-nomenclature-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_17",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "inventory_id",
            "in": "query",
            "description": "inventory_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "product_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InventoryNomenclature"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/login": {
      "get": {
        "tags": [
          "security-controller"
        ],
        "summary": "login",
        "operationId": "loginUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "error",
            "in": "query",
            "description": "error",
            "required": false,
            "type": "string"
          },
          {
            "name": "logout",
            "in": "query",
            "description": "logout",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModelAndView"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/logs/{itemId}": {
      "get": {
        "tags": [
          "log-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_18",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "itemId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "item_type",
            "in": "query",
            "description": "item_type",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "string"
          },
          {
            "name": "action_type",
            "in": "query",
            "description": "action_type",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "date_from",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "date_to",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LogDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/maps/brigade_schedules": {
      "get": {
        "tags": [
          "map-controller"
        ],
        "summary": "[READ] подразделение -> вызов -> поиск бригад",
        "operationId": "findBrigadesUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeFindListDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/materials": {
      "get": {
        "tags": [
          "pharmacy-material-reference-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_27",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sub_id",
            "in": "query",
            "description": "sub_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/materials/{id}": {
      "get": {
        "tags": [
          "pharmacy-material-reference-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_26",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyReferenceItem"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/bag": {
      "get": {
        "tags": [
          "mobile-controller"
        ],
        "summary": "readAllBrigadeMedicine",
        "operationId": "readAllBrigadeMedicineUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "brigade",
            "in": "query",
            "description": "brigade",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "mobile-controller"
        ],
        "summary": "writeAllMedicineConsumption",
        "operationId": "writeAllMedicineConsumptionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "items",
            "description": "items",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Medicine"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/calls": {
      "get": {
        "tags": [
          "mobile-controller"
        ],
        "summary": "readAllCalls",
        "operationId": "readAllCallsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/calls/confirm": {
      "get": {
        "tags": [
          "mobile-controller"
        ],
        "summary": "confirmAllCalls",
        "operationId": "confirmAllCallsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "guid",
            "in": "query",
            "description": "guid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/cards": {
      "post": {
        "tags": [
          "mobile-controller"
        ],
        "summary": "создание карточек вызовов",
        "operationId": "createCardsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MobileCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MobileCard"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/message": {
      "post": {
        "tags": [
          "mobile-controller"
        ],
        "summary": "receiveMobileMessage",
        "operationId": "receiveMobileMessageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "mobileMessage",
            "description": "mobileMessage",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MobileMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_17",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NotificationObject"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/notifications/nosecurity": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "summary": "readHelloWorld",
        "operationId": "readHelloWorldUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/osm_tiles/{z}/{x}/{y}": {
      "get": {
        "tags": [
          "map-proxy-controller"
        ],
        "summary": "карта -> tile [image.png]",
        "operationId": "getUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "z",
            "in": "path",
            "description": "z",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "x",
            "in": "path",
            "description": "x",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "y",
            "in": "path",
            "description": "y",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OutputStream"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/packagings": {
      "get": {
        "tags": [
          "packaging-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_19",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "description": "product_id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Packaging"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "packaging-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_13",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "packaging",
            "description": "packaging",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Packaging"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Packaging"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/packagings/{id}": {
      "get": {
        "tags": [
          "packaging-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_18",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Packaging"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "packaging-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_15",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "packaging",
            "description": "packaging",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Packaging"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Packaging"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/performer_types": {
      "get": {
        "tags": [
          "performer-type-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_21",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PerformerTypeDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "performer-type-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_15",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PerformerTypeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerformerTypeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/performer_types/{id}": {
      "get": {
        "tags": [
          "performer-type-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_20",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerformerTypeDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "performer-type-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_17",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PerformerTypeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerformerTypeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/performers": {
      "get": {
        "tags": [
          "performer-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_20",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "query",
            "description": "subId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "f110Id",
            "in": "query",
            "description": "f110Id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "skills",
            "in": "query",
            "description": "skills",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "query",
            "in": "query",
            "description": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "brigade_scheduleId",
            "in": "query",
            "description": "brigade_scheduleId",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListDto«PerformerDto»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "performer-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_14",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PerformerDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerformerDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/performers/password": {
      "get": {
        "tags": [
          "performer-controller"
        ],
        "summary": "updatePassword",
        "operationId": "updatePasswordUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "login",
            "in": "query",
            "description": "login",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "performer-controller"
        ],
        "summary": "updatePassword",
        "operationId": "updatePasswordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PerformerDto"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "password",
            "required": true,
            "type": "string"
          },
          {
            "name": "password2",
            "in": "query",
            "description": "password2",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/performers/roles/{id}": {
      "get": {
        "tags": [
          "performer-controller"
        ],
        "summary": "readRoles",
        "operationId": "readRolesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListDto«Role»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/performers/{id}": {
      "get": {
        "tags": [
          "performer-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_19",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "skills",
            "in": "query",
            "description": "skills",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerformerDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "performer-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_16",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PerformerDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerformerDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy/references": {
      "get": {
        "tags": [
          "pharmacy-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_22",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "place_id",
            "in": "query",
            "description": "place_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "drug_id",
            "in": "query",
            "description": "drug_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "code",
            "in": "query",
            "description": "code",
            "required": false,
            "type": "string"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PharmacyDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy/references/drugs": {
      "get": {
        "tags": [
          "pharmacy-controller"
        ],
        "summary": "readAllDrugs",
        "operationId": "readAllDrugsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "place_id",
            "in": "query",
            "description": "place_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "drug_id",
            "in": "query",
            "description": "drug_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "group_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "is_narcotic",
            "in": "query",
            "description": "is_narcotic",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PharmacyDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy/references/drugs/total": {
      "get": {
        "tags": [
          "pharmacy-controller"
        ],
        "summary": "readAllTotalDrugs",
        "operationId": "readAllTotalDrugsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "place_id",
            "in": "query",
            "description": "place_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "is_narcotic",
            "in": "query",
            "description": "is_narcotic",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PharmacyDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy/references/materials": {
      "get": {
        "tags": [
          "pharmacy-controller"
        ],
        "summary": "readAllMaterials",
        "operationId": "readAllMaterialsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "place_id",
            "in": "query",
            "description": "place_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "drug_id",
            "in": "query",
            "description": "drug_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "group_id",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "is_bandages",
            "in": "query",
            "description": "is_bandages",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PharmacyDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy/references/materials/total": {
      "get": {
        "tags": [
          "pharmacy-controller"
        ],
        "summary": "readAllTotalMaterials",
        "operationId": "readAllTotalMaterialsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "place_id",
            "in": "query",
            "description": "place_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "is_bandages",
            "in": "query",
            "description": "is_bandages",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PharmacyDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy/references/{id}": {
      "get": {
        "tags": [
          "pharmacy-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_21",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "pharmacy-controller"
        ],
        "summary": "updateDrug",
        "operationId": "updateDrugUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "pharmacyItem",
            "description": "pharmacyItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PharmacyItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyItem"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_bag_items": {
      "get": {
        "tags": [
          "bag-item-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "owner_id",
            "in": "query",
            "description": "owner_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "bag_id",
            "in": "query",
            "description": "bag_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BagItemDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "bag-item-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BagItemDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BagItemDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_bag_items/templates/{id}": {
      "get": {
        "tags": [
          "bag-item-controller"
        ],
        "summary": "readAllByTemplate",
        "operationId": "readAllByTemplateUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "query",
            "description": "template_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BagItemDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_bag_items/{id}": {
      "get": {
        "tags": [
          "bag-item-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BagItemDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "bag-item-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BagItemDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BagItemDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_bag_matrix_items": {
      "get": {
        "tags": [
          "bag-matrix-item-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "bag_id",
            "in": "query",
            "description": "bag_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "matrix_id",
            "in": "query",
            "description": "matrix_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BagMatrixItemDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_bags": {
      "get": {
        "tags": [
          "bag-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "owner_id",
            "in": "query",
            "description": "owner_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BagDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "bag-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BagDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BagDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_bags/sending": {
      "put": {
        "tags": [
          "bag-controller"
        ],
        "summary": "sendBag",
        "operationId": "sendBagUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendBagDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_bags/{id}": {
      "get": {
        "tags": [
          "bag-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BagDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "bag-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BagDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BagDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_bags/{id}/unpacking": {
      "put": {
        "tags": [
          "bag-controller"
        ],
        "summary": "unpacking",
        "operationId": "unpackingUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BagDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_counterparties": {
      "get": {
        "tags": [
          "pharmacy-counterparty-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_23",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sub_id",
            "in": "query",
            "description": "sub_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PharmacyCounterpartyDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "pharmacy-counterparty-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_16",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PharmacyCounterpartyDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyCounterpartyDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_counterparties/{id}": {
      "get": {
        "tags": [
          "pharmacy-counterparty-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_22",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReferenceDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "pharmacy-counterparty-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_18",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PharmacyCounterpartyDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyCounterpartyDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_documents": {
      "get": {
        "tags": [
          "pharmacy-document-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_24",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sub_id",
            "in": "query",
            "description": "sub_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "counterparty_id",
            "in": "query",
            "description": "counterparty_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PharmacyDocumentDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "pharmacy-document-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_17",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PharmacyDocumentDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyDocumentDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "pharmacy-document-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_19",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PharmacyDocumentDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyDocumentDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_documents/nomenclature_items": {
      "get": {
        "tags": [
          "pharmacy-document-controller"
        ],
        "summary": "readAllNomenclatureItems",
        "operationId": "readAllNomenclatureItemsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "owner_id",
            "in": "query",
            "description": "owner_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PharmacyNomenclatureDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_documents/processing": {
      "post": {
        "tags": [
          "pharmacy-document-controller"
        ],
        "summary": "createAndProcessing",
        "operationId": "createAndProcessingUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PharmacyDocumentDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyDocumentDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "pharmacy-document-controller"
        ],
        "summary": "updateAndProcessing",
        "operationId": "updateAndProcessingUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PharmacyDocumentDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyDocumentDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_documents/{id}": {
      "get": {
        "tags": [
          "pharmacy-document-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_23",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyDocumentDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_documents/{id}/items": {
      "get": {
        "tags": [
          "pharmacy-document-controller"
        ],
        "summary": "readAllItems",
        "operationId": "readAllItemsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DocumentItemDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_documents/{id}/processing": {
      "get": {
        "tags": [
          "pharmacy-document-controller"
        ],
        "summary": "processing",
        "operationId": "processingUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyDocumentDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_group_bag_items": {
      "get": {
        "tags": [
          "group-bag-item-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_14",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "bag_id",
            "in": "query",
            "description": "bag_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "matrix_id",
            "in": "query",
            "description": "matrix_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroupBagItemDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_group_references": {
      "get": {
        "tags": [
          "pharmacy-group-reference-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_26",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "description": "group_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PharmacyGroupReferenceDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "pharmacy-group-reference-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_19",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PharmacyGroupReferenceDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyGroupReferenceDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_group_references/{id}": {
      "get": {
        "tags": [
          "pharmacy-group-reference-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_25",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyGroupReferenceDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "pharmacy-group-reference-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_21",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PharmacyGroupReferenceDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyGroupReferenceDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_groups": {
      "get": {
        "tags": [
          "pharmacy-group-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_25",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sub_id",
            "in": "query",
            "description": "sub_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReferenceDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "pharmacy-group-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_18",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReferenceDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReferenceDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_groups/{id}": {
      "get": {
        "tags": [
          "pharmacy-group-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_24",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReferenceDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "pharmacy-group-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_20",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReferenceDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReferenceDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_matrix_groups": {
      "get": {
        "tags": [
          "pharmacy-matrix-group-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_29",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sub_id",
            "in": "query",
            "description": "sub_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "matrix_id",
            "in": "query",
            "description": "matrix_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PharmacyMatrixGroupDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "pharmacy-matrix-group-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_21",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PharmacyMatrixGroupDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyMatrixGroupDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_matrix_groups/{id}": {
      "get": {
        "tags": [
          "pharmacy-matrix-group-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_28",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyMatrixGroupDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "pharmacy-matrix-group-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_23",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PharmacyMatrixGroupDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyMatrixGroupDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_matrix_items": {
      "get": {
        "tags": [
          "pharmacy-matrix-item-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_30",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "matrix_id",
            "in": "query",
            "description": "matrix_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PharmacyMatrixItemDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "pharmacy-matrix-item-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_22",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PharmacyMatrixItemDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyMatrixItemDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_matrix_items/{id}": {
      "get": {
        "tags": [
          "pharmacy-matrix-item-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_29",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyMatrixItemDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "pharmacy-matrix-item-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_24",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PharmacyMatrixItemDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PharmacyMatrixItemDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_matrixes": {
      "get": {
        "tags": [
          "pharmacy-matrix-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_28",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sub_id",
            "in": "query",
            "description": "sub_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReferenceDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "pharmacy-matrix-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_20",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReferenceDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReferenceDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/pharmacy_matrixes/{id}": {
      "get": {
        "tags": [
          "pharmacy-matrix-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_27",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReferenceDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "pharmacy-matrix-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_22",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReferenceDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReferenceDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/places": {
      "get": {
        "tags": [
          "place-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_31",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subdivision_id",
            "in": "query",
            "description": "subdivision_id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "without_owner",
            "in": "query",
            "description": "without_owner",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "string",
            "enum": [
              "STORAGE",
              "PACKAGE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Place"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "place-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_23",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "place",
            "description": "place",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Place"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/places/{id}": {
      "get": {
        "tags": [
          "place-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_30",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "place-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_25",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "place",
            "description": "place",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Place"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Place"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/product_types": {
      "get": {
        "tags": [
          "product-type-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_33",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductType"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "product-type-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_25",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "productType",
            "description": "productType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductType"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/product_types/{id}": {
      "get": {
        "tags": [
          "product-type-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_32",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "product-type-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_27",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "productType",
            "description": "productType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProductType"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "product-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_32",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "s",
            "in": "query",
            "description": "s",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "product-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_24",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "product",
            "description": "product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "product-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_31",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "product-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_26",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "product",
            "description": "product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/reference_types": {
      "get": {
        "tags": [
          "reference-type-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_34",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": true,
            "type": "string"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReferenceTypeDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "reference-type-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_26",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReferenceTypeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReferenceTypeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/reference_types/{id}": {
      "get": {
        "tags": [
          "reference-type-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_33",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReferenceTypeDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "reference-type-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_28",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReferenceTypeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReferenceTypeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/report": {
      "get": {
        "tags": [
          "report-controller"
        ],
        "summary": "печать карт вызовов",
        "operationId": "generateCardReportUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/report/cards/{id}": {
      "get": {
        "tags": [
          "report-controller"
        ],
        "summary": "печать карты вызова",
        "operationId": "generateCardReportUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/report/cards/{id}/ticket": {
      "get": {
        "tags": [
          "report-controller"
        ],
        "summary": "печать сопроводит. листа и талона к нему",
        "operationId": "generateCardReportUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/report/subdivisions/{id}/calendars/brigades": {
      "get": {
        "tags": [
          "report-controller"
        ],
        "summary": "печать графика нарядов бригад СМП",
        "operationId": "generateBrigadeCalendarUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "date_from",
            "required": true,
            "type": "string"
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "date_to",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/report/subdivisions/{id}/calendars/performers": {
      "get": {
        "tags": [
          "report-controller"
        ],
        "summary": "печать графика работы сотрудников",
        "operationId": "generatePerforemerCalendarUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "date_from",
            "required": true,
            "type": "string"
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "date_to",
            "required": true,
            "type": "string"
          },
          {
            "name": "group_code",
            "in": "query",
            "description": "group_code",
            "required": true,
            "type": "string",
            "enum": [
              "MEDIC",
              "DRIVER",
              "MANAGER"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/report/subdivisions/{id}/cards/diary": {
      "get": {
        "tags": [
          "report-controller"
        ],
        "summary": "печать дневника работы СМП",
        "operationId": "generateDiaryReportUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "date_from",
            "required": true,
            "type": "string"
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "date_to",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/report/subdivisions/{id}/cards/journal": {
      "get": {
        "tags": [
          "report-controller"
        ],
        "summary": "печать жарнала вызовов в подразделении",
        "operationId": "generateJournalReportUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "date_from",
            "required": true,
            "type": "string"
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "date_to",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/report/subdivisions/{id}/daily": {
      "get": {
        "tags": [
          "report-controller"
        ],
        "summary": "печать ежедневного отчета",
        "operationId": "generateDailyReportUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "date",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/report/subdivisions/{sub_id}/cards/{cardId}/alarm_ticket": {
      "get": {
        "tags": [
          "report-controller"
        ],
        "summary": "печать сигнального талона",
        "operationId": "generateAlarmTicketUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/report/subdivisions/{sub_id}/cards/{cardId}/death_protocol": {
      "get": {
        "tags": [
          "report-controller"
        ],
        "summary": "печать протокола констатации смерти",
        "operationId": "generateDeathProtocolUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cardId",
            "in": "path",
            "description": "cardId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/report_groups/tree": {
      "get": {
        "tags": [
          "report-group-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_35",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "node",
            "in": "query",
            "description": "node",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReportGroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/reports": {
      "get": {
        "tags": [
          "report-docx-4-g-controller"
        ],
        "summary": "readAllByGroupCodeAndSubdivisionId",
        "operationId": "readAllByGroupCodeAndSubdivisionIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "group_code",
            "in": "query",
            "description": "group_code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Report"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "report-docx-4-g-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_27",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "form",
            "description": "form",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UploadFileForm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/reports/create-empty-upload-from": {
      "get": {
        "tags": [
          "report-docx-4-g-controller"
        ],
        "summary": "пустой метод, для автогенерации клиентского кода",
        "operationId": "createEmptyUploadFormUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UploadFileForm"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/reports/download/{id}": {
      "get": {
        "tags": [
          "report-docx-4-g-controller"
        ],
        "summary": "download",
        "operationId": "downloadUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
//    "/reports/entities": {
//      "post": {
//        "tags": [
//          "report-docx-4-g-controller"
//        ],
//        "summary": "print",
//        "operationId": "printUsingPOST",
//        "consumes": [
//          "application/json"
//        ],
//        "produces": [
//          "*/*"
//        ],
//        "parameters": [
//          {
//            "in": "body",
//            "name": "list",
//            "description": "list",
//            "required": true,
//            "schema": {
//              "type": "object",
//              "additionalProperties": {
//                "$ref": "#/definitions/Map«string,object»"
//              }
//            }
//          }
//        ],
//        "responses": {
//          "200": {
//            "description": "OK",
//            "schema": {
//              "type": "array",
//              "items": {
//                "$ref": "#/definitions/ResultSet"
//              }
//            }
//          },
//          "201": {
//            "description": "Created"
//          },
//          "401": {
//            "description": "Unauthorized"
//          },
//          "403": {
//            "description": "Forbidden"
//          },
//          "404": {
//            "description": "Not Found"
//          }
//        }
//      }
//    },
    "/reports/entities/root": {
      "get": {
        "tags": [
          "report-docx-4-g-controller"
        ],
        "summary": "getTables",
        "operationId": "getTablesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Table"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/reports/entities/{type}/fields": {
      "get": {
        "tags": [
          "report-docx-4-g-controller"
        ],
        "summary": "getFieldsByType",
        "operationId": "getFieldsByTypeUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "type",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Field"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/reports/list": {
      "get": {
        "tags": [
          "report-docx-4-g-controller"
        ],
        "summary": "readReportList",
        "operationId": "readReportListUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "code",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "format",
            "in": "query",
            "description": "format",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Report"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/reports/prepare_card": {
      "post": {
        "tags": [
          "report-docx-4-g-controller"
        ],
        "summary": "prepareCommon",
        "operationId": "prepareCommonUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/reports/print": {
      "get": {
        "tags": [
          "report-docx-4-g-controller"
        ],
        "summary": "print",
        "operationId": "printUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "uid",
            "in": "query",
            "description": "uid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/reports/{id}": {
      "get": {
        "tags": [
          "report-docx-4-g-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_34",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "report-docx-4-g-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/results/mkb": {
      "get": {
        "tags": [
          "card-result-controller"
        ],
        "summary": "[DEPRECATED] возвращает список записей МКБ 10 по текстовому поиску в коде/названии",
        "operationId": "findMkbListUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "s",
            "in": "query",
            "description": "s",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MkbDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/results/mkb/{id}": {
      "get": {
        "tags": [
          "card-result-controller"
        ],
        "summary": "[DEPRECATED] возвращает вложенные записи МКБ 10 по id parent-записи",
        "operationId": "readMkbListUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MkbDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/results/{id}": {
      "get": {
        "tags": [
          "card-result-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "card-result-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardResultDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardResultDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/routing": {
      "post": {
        "tags": [
          "routing-controller"
        ],
        "summary": "read",
        "operationId": "readUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "coords",
            "description": "coords",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoutingDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/skills": {
      "get": {
        "tags": [
          "skill-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_36",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "query",
            "description": "subId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SkillDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "skill-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_28",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SkillDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SkillDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/skills/{id}": {
      "get": {
        "tags": [
          "skill-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_35",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SkillDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "skill-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_29",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SkillDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SkillDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivision_types": {
      "get": {
        "tags": [
          "subdivision-type-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_39",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "parId",
            "in": "query",
            "description": "parId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubdivisionTypeDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "subdivision-type-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_30",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubdivisionDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubdivisionTypeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivision_types/tree": {
      "get": {
        "tags": [
          "subdivision-type-controller"
        ],
        "summary": "readTree",
        "operationId": "readTreeUsingGET_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TreeNode"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivision_types/{id}": {
      "get": {
        "tags": [
          "subdivision-type-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_37",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubdivisionTypeDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "subdivision-type-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_31",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubdivisionDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubdivisionTypeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions": {
      "get": {
        "tags": [
          "subdivision-controller"
        ],
        "summary": "[READ] список подразделений -> все",
        "operationId": "readAllUsingGET_38",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "parId",
            "in": "query",
            "description": "parId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "with_par",
            "in": "query",
            "description": "with_par",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "typeId",
            "in": "query",
            "description": "typeId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "type_code",
            "in": "query",
            "description": "type_code",
            "required": false,
            "type": "string"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubdivisionDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "subdivision-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_29",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubdivisionFlatDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubdivisionFlatDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/all": {
      "get": {
        "tags": [
          "subdivision-controller"
        ],
        "summary": "[READ] список подразделений с родителями -> все",
        "operationId": "readAllWithParentUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubdivisionDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/brigade_tree": {
      "get": {
        "tags": [
          "subdivision-controller"
        ],
        "summary": "[READ] дерево подразделений с бригадами -> все",
        "operationId": "readTreeWithBrigadesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TreeNode"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/brigades": {
      "get": {
        "tags": [
          "subdivision-controller"
        ],
        "summary": "????)",
        "operationId": "readAllWithBrigadesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubdivisionDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/brigades/tree": {
      "get": {
        "tags": [
          "subdivision-controller"
        ],
        "summary": "???? денис???)",
        "operationId": "readBrigadeTreeUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubdivisionDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/primary": {
      "get": {
        "tags": [
          "subdivision-controller"
        ],
        "summary": "[READ] список подразделений -> основные (ТЦМК/Отделения)",
        "operationId": "readAllPrimaryUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "cardId",
            "in": "query",
            "description": "cardId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "with_current",
            "in": "query",
            "description": "with_current",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubdivisionDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/primary/tree": {
      "get": {
        "tags": [
          "subdivision-controller"
        ],
        "summary": "[READ] дерево подразделений -> основные (ТЦМК/Отделения)",
        "operationId": "readAllPrimaryTreeUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TreeNode"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/tree": {
      "get": {
        "tags": [
          "subdivision-controller"
        ],
        "summary": "[READ] дерево подразделений -> все",
        "operationId": "readTreeUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TreeNode"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/tree/flat": {
      "get": {
        "tags": [
          "subdivision-controller"
        ],
        "summary": "readTreeFlat",
        "operationId": "readTreeFlatUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubdivisionDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{id}": {
      "get": {
        "tags": [
          "subdivision-controller"
        ],
        "summary": "[READ] подразделение",
        "operationId": "readOneUsingGET_36",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubdivisionDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "subdivision-controller"
        ],
        "summary": "[UPDATE] подразделение",
        "operationId": "updateUsingPUT_30",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubdivisionFlatDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubdivisionDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/brigades": {
      "get": {
        "tags": [
          "subdivision-controller"
        ],
        "summary": "возвращает список бригад в подразделении",
        "operationId": "readAllUsingGET_37",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/brigade_schedules": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "возвращает список актуальных смен бригад в подразделении",
        "operationId": "readAllActualUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "mode",
            "in": "query",
            "description": "mode",
            "required": false,
            "type": "string",
            "enum": [
              "OFFLINE",
              "ONLINE",
              "UPCOMING"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeScheduleDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/brigade_schedules/{brigade_scheduleId}/end_duty": {
      "put": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "вывод бригады из смены",
        "operationId": "endBrigadeDutyUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigade_scheduleId",
            "in": "path",
            "description": "brigade_scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrigadeDutyRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeScheduleDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/brigade_schedules/{brigade_scheduleId}/protocol": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "возвращает хронологию изменений статусов бригады",
        "operationId": "getBrigadeScheduleCallTransferHistoryUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigade_scheduleId",
            "in": "path",
            "description": "brigade_scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeScheduleDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/brigade_schedules/{brigade_scheduleId}/start_duty": {
      "put": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "вывод бригады в смену",
        "operationId": "startBrigadeDutyUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigade_scheduleId",
            "in": "path",
            "description": "brigade_scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrigadeDutyRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeScheduleDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/brigades": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "возвращает список рабочих периодов всех бригад в подразделении",
        "operationId": "readPerformersCalendarUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "from",
            "in": "query",
            "description": "from",
            "required": false,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "to",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeCalendarDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/brigades/performers/available": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "возвращает список свободных сотрудников для назначения в бригаду",
        "operationId": "readAllAvailablePerformersUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "from",
            "in": "query",
            "description": "from",
            "required": true,
            "type": "string"
          },
          {
            "name": "group_code",
            "in": "query",
            "description": "group_code",
            "required": true,
            "type": "string",
            "enum": [
              "MEDIC",
              "DRIVER"
            ]
          },
          {
            "name": "to",
            "in": "query",
            "description": "to",
            "required": true,
            "type": "string"
          },
          {
            "name": "s",
            "in": "query",
            "description": "s",
            "required": false,
            "type": "string"
          },
          {
            "name": "chosen_list",
            "in": "query",
            "description": "список id сотрудников, добавленных в бригаду",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerformerBrigScheduleDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/brigades/transport/available": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "возвращает список свободных транспортных средств для назначения в бригаду",
        "operationId": "readAllAvailableTranspotsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "from",
            "in": "query",
            "description": "from",
            "required": true,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "to",
            "required": true,
            "type": "string"
          },
          {
            "name": "s",
            "in": "query",
            "description": "s",
            "required": false,
            "type": "string"
          },
          {
            "name": "excludeId_list",
            "in": "query",
            "description": "список id авто, добавленных в бригаду",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportBrigScheduleAvailableDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/brigades/{brigadeId}/schedules": {
      "post": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "создание рабочего периода (смены) для бригады",
        "operationId": "createBrigadeScheduleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigadeId",
            "in": "path",
            "description": "brigadeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrigadeScheduleCreateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeScheduleDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/brigades/{brigade_id}/schedules/{scheduleId}": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "возвращает рабочий период бригады",
        "operationId": "getBrigadeScheduleUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigadeId",
            "in": "path",
            "description": "brigadeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeScheduleDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "редактирование рабочего периода для бригады",
        "operationId": "updateBrigadeScheduleUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigadeId",
            "in": "path",
            "description": "brigadeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BrigadeScheduleUpdateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeScheduleDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "удаление рабочего периода бригады",
        "operationId": "updateBrigadeScheduleUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigadeId",
            "in": "path",
            "description": "brigadeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/brigades/{brigade_id}/schedules/{scheduleId}/calls": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "возвращает список вызовов по наряду",
        "operationId": "getBrigadeScheduleCallsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigadeId",
            "in": "path",
            "description": "brigadeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeCallDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/brigades/{brigade_id}/schedules/{scheduleId}/performers": {
      "post": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "создание рабочего периода сотрудника в бригаде",
        "operationId": "createPerformerBrigScheduleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigadeId",
            "in": "path",
            "description": "brigadeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PerformerBrigScheduleCreateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerformerBrigScheduleDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/brigades/{brigade_id}/schedules/{scheduleId}/transport": {
      "post": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "создание рабочего периода транспорта в бригаде",
        "operationId": "createCarBrigScheduleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigadeId",
            "in": "path",
            "description": "brigadeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransportBrigScheduleCreateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportBrigScheduleCreateDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/brigades/{brigade_id}/schedules/{schedule_id}/performers/{performer_scheduleId}": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "возвращает рабочий период cотрудника в бригаде",
        "operationId": "getBrigadeScheduleUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigadeId",
            "in": "path",
            "description": "brigadeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "performer_scheduleId",
            "in": "path",
            "description": "performer_scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerformerBrigScheduleDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "редактирование рабочего периода сотрудника в бригаде",
        "operationId": "updatePerformerBrigScheduleUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigadeId",
            "in": "path",
            "description": "brigadeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "performer_scheduleId",
            "in": "path",
            "description": "performer_scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PerformerBrigScheduleUpdateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerformerBrigScheduleDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "удаление рабочего периода сотрудника в бригаде",
        "operationId": "deletePerformerBrigadeScheduleUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigadeId",
            "in": "path",
            "description": "brigadeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "performer_scheduleId",
            "in": "path",
            "description": "performer_scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/brigades/{brigade_id}/schedules/{schedule_id}/transport/{transport_scheduleId}": {
      "put": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "редактирование рабочего периода транспорта в бригаде",
        "operationId": "updateCarBrigScheduleUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigadeId",
            "in": "path",
            "description": "brigadeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "transport_scheduleId",
            "in": "path",
            "description": "transport_scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransportBrigScheduleUpdateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerformerBrigScheduleDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "удаление рабочего периода транспорта в бригаде",
        "operationId": "deleteCarBrigadeScheduleUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigadeId",
            "in": "path",
            "description": "brigadeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "transport_scheduleId",
            "in": "path",
            "description": "transport_scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/performers": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "возвращает список рабочих периодов всех сотрудников в подразделении",
        "operationId": "readPerformersCalendarUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "id текущего подразделения",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "from",
            "in": "query",
            "description": "дата начала 'yyyy-MM-ddTHH:mm:ss'",
            "required": false,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "дата окончания 'yyyy-MM-ddTHH:mm:ss'",
            "required": false,
            "type": "string"
          },
          {
            "name": "subdivisionId",
            "in": "query",
            "description": "id подразделения для календаря",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Container"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/performers/generate": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "возвращает шаблон для пролонгации календаря в подразделении",
        "operationId": "generatePerformerScheduleCalendarUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "id текущего подразделения",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "from",
            "in": "query",
            "description": "дата начала 'yyyy-MM-dd'T'HH:mm:ss'",
            "required": false,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "дата окончания 'yyyy-MM-dd'T'HH:mm:ss'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Container"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "формирует календрарь в подразделении по шаблону",
        "operationId": "createPerformersCalendarUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "id текущего подразделения",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "map",
            "description": "map",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Container"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Container"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/performers/protocol": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "протокол календаря в подразделении",
        "operationId": "readProtocolForSubdivisionUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "id текущего подразделения",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "subdivisionId",
            "in": "query",
            "description": "id подразделения для календаря",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "from",
            "in": "query",
            "description": "дата начала 'yyyy-MM-ddTHH:mm:ss'",
            "required": false,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "дата окончания 'yyyy-MM-ddTHH:mm:ss'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/performers/schedule_types": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "[READ] список типов смены в календаре",
        "operationId": "readAllScheduleTypeUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScheduleType"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "[CREATE] создание нового типа смены в календаре",
        "operationId": "createScheduleTypeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "scheduleType",
            "description": "scheduleType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduleType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ScheduleType"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/performers/schedule_types/{id}": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "[READ] тип смены в календаре",
        "operationId": "readScheduleTypeUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ScheduleType"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "[UPDATE] изменение типа смены в календаре",
        "operationId": "updateScheduleTypeUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "scheduleType",
            "description": "scheduleType",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduleType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ScheduleType"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/performers/schedule_types/{id}/calculate": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "[READ] расчет периода смены в календаре",
        "operationId": "calculateScheduleUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "mode",
            "in": "query",
            "description": "mode",
            "required": true,
            "type": "string",
            "enum": [
              "DAY",
              "PERIOD"
            ]
          },
          {
            "name": "from",
            "in": "query",
            "description": "from",
            "required": true,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "to",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Period"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/performers/{performerId}/protocol": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "протокол календаря для сотрудника",
        "operationId": "readProtocolForPerformerUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "id текущего подразделения",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "performerId",
            "in": "path",
            "description": "id сотрудника в календаре",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "from",
            "in": "query",
            "description": "дата начала 'yyyy-MM-ddTHH:mm:ss'",
            "required": false,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "дата окончания 'yyyy-MM-ddTHH:mm:ss'",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/performers/{performerId}/schedules": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "возвращает список рабочих периодов сотрудника по id",
        "operationId": "readAllSchedulesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "performerId",
            "in": "path",
            "description": "performerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "from",
            "in": "query",
            "description": "from",
            "required": false,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "to",
            "required": false,
            "type": "string"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerformerScheduleDto2"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "создание рабочего периода для сотрудника",
        "operationId": "createPerformerScheduleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "performerId",
            "in": "path",
            "description": "performerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PerformerScheduleDto2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerformerScheduleDto2"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "обновление сведений о конкретоном рабочем периоде сотрудника",
        "operationId": "updatePerformersScheduleUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "performerId",
            "in": "path",
            "description": "performerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PerformerScheduleDto2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calendars/performers/{performerId}/schedules/{id}": {
      "get": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "возвращает рабочий период сотрудника по id",
        "operationId": "readOnePerformerScheduleUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "performerId",
            "in": "path",
            "description": "performerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "`id",
            "in": "path",
            "description": "`id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PerformerScheduleDto2"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "calendar-controller"
        ],
        "summary": "удаление рабочего периода сотрудника",
        "operationId": "deletePerformersScheduleUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "performerId",
            "in": "path",
            "description": "performerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение -> вызовы",
        "operationId": "readAllUsingGET_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "mode",
            "in": "query",
            "description": "mode",
            "required": false,
            "type": "string",
            "enum": [
              "ALL",
              "ACTIVE",
              "ARCHIVED"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallGridDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "call-controller"
        ],
        "summary": "[CREATE ]создание нового вызова [возвращает callId]",
        "operationId": "createUsingPOST_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CallDtoFLAT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/create": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] получение данных для создания нового вызова",
        "operationId": "prepareCallUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "phone",
            "in": "query",
            "description": "phone",
            "required": false,
            "type": "string"
          },
          {
            "name": "audio_file_name",
            "in": "query",
            "description": "audio_file_name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/primary/find": {
      "post": {
        "tags": [
          "call-controller"
        ],
        "summary": "[CREATE] поиск первичного вызова",
        "operationId": "findSimilarCallsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CallSimilarRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallShortDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/request": {
      "post": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] возвращает список вызовов по заданным параметрам поиска",
        "operationId": "readAllUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subdivisionId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "number",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "declarantName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "declarantPhone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "patientName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "patientSex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "patientAgeYears",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "patientAgeMonths",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "patientAgeDays",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "aoName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "districtId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "performer",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "declarantTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "callPlaceTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "reasonTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallGridDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/transfer": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение -> вызовы -> входящие",
        "operationId": "getReceivedListUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CallTransferDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{callId}": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение -> вызов",
        "operationId": "readOneUsingGET_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{callId}/address": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение -> вызов -> адрес",
        "operationId": "readSideOneAddressPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FiasAddressDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "call-controller"
        ],
        "summary": "[UPDATE] подразделение -> вызов -> адрес",
        "operationId": "updateAddressPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CallFiasAddressDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallFiasAddressDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{callId}/address/location": {
      "put": {
        "tags": [
          "call-controller"
        ],
        "summary": "[UPDATE] подразделение -> вызов -> адрес -> локация",
        "operationId": "updateLocationPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CallLocationPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallLocationPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{callId}/brigade_schedules": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение -> вызов -> все назначенные смены бригад",
        "operationId": "getBrigadesFromCallUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallBrigadePartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "call-controller"
        ],
        "summary": "[CREATE] подразделение -> вызов -> назначение бригады",
        "operationId": "setBrigadeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dtoList",
            "description": "dtoList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrigadeAppointRequestDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{callId}/cards": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "возвращает список карт вызова в вызове",
        "operationId": "readCardsByCallAndSubdivisionUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardGridDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{callId}/declarant": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение -> вызов -> заявитель",
        "operationId": "readSideOneDeclarantPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallDeclarantPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "call-controller"
        ],
        "summary": "[UPDATE] подразделение -> вызов -> декларант",
        "operationId": "updateDeclarantPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CallDeclarantPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallGeneralPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{callId}/find": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение -> вызов -> поиск бригад",
        "operationId": "findBrigadesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "radius",
            "in": "query",
            "description": "radius",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "routing",
            "in": "query",
            "description": "routing",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BrigadeFindListDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{callId}/general": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение -> вызов -> основные сведения",
        "operationId": "readSideOneGeneralPartUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallGeneralPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "call-controller"
        ],
        "summary": "[UPDATE] подразделение -> вызов -> основные сведения",
        "operationId": "updateGeneralPartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CallGeneralPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallGeneralPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{callId}/patients": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение -> вызов -> все пациенты",
        "operationId": "readAllPatientsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallPatientPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "call-controller"
        ],
        "summary": "[CREATE] подразделение -> вызов -> больные",
        "operationId": "updatePatientsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CallPatientPartDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallPatientPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{callId}/patients/chronic/cards": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение -> вызовы -> поиск карт по данным пациента",
        "operationId": "getAllChronicCardsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardGridDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{callId}/protocol": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "вызов -> протокол",
        "operationId": "readProtocolUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LogDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{callId}/transfer": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение ->  вызов -> передача -> список подразделений-получателей",
        "operationId": "getSendListUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallTransferDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "call-controller"
        ],
        "summary": "[CREATE] подразделение -> вызов -> передача",
        "operationId": "getSubdivisionsForCallTransferUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransferAddresseeDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{callId}/transfer/available": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение ->  вызов -> передача -> список доступных подразделений",
        "operationId": "readAllPrimaryUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubdivisionDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{call_id}/brigade_schedules/{brigade_scheduleId}": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение -> вызов -> конкретная назначенная смена бригады",
        "operationId": "getBrigadeScheduleCallTransferUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigade_scheduleId",
            "in": "path",
            "description": "brigade_scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallBrigadePartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{call_id}/brigade_schedules/{brigade_scheduleId}/cards": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "возвращает список карт вызова в бригаде",
        "operationId": "readCardsByCallAndBrigadeUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigade_scheduleId",
            "in": "path",
            "description": "brigade_scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardGridDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "call-controller"
        ],
        "summary": "[CREATE] подразделение -> вызов -> бригада -> Форма 110/у",
        "operationId": "createCardUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigade_scheduleId",
            "in": "path",
            "description": "brigade_scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{call_id}/brigade_schedules/{brigade_scheduleId}/history": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение -> вызов -> смена бригады -> история сообщений",
        "operationId": "getBrigadeScheduleCallTransferHistoryUsingGET_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigade_scheduleId",
            "in": "path",
            "description": "brigade_scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageEventDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{call_id}/brigade_schedules/{brigade_scheduleId}/messages": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение -> вызов -> смена бригады -> доступные сообщения",
        "operationId": "readAvailableEventsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigade_scheduleId",
            "in": "path",
            "description": "brigade_scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageEventDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "call-controller"
        ],
        "summary": "[CREATE] создание нового сообщения бригады",
        "operationId": "createNewMessageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "brigade_scheduleId",
            "in": "path",
            "description": "brigade_scheduleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dtoList",
            "description": "dtoList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MessageEventDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MessageEventDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{call_id}/patients/{patientId}": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение -> вызов -> пациент",
        "operationId": "readOnePatientUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "patientId",
            "in": "path",
            "description": "patientId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallPatientPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "call-controller"
        ],
        "summary": "[UPDATE] подразделение -> вызов -> пациент",
        "operationId": "updateUsingPUT_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "patientId",
            "in": "path",
            "description": "patientId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CallPatientPartDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallPatientPartDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "call-controller"
        ],
        "summary": "[DELETE] подразделение -> вызов -> пациент",
        "operationId": "deletePatientUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "patientId",
            "in": "path",
            "description": "patientId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CallPatientPartDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/subdivisions/{subId}/calls/{call_id}/patients/{patientId}/chronic/cards": {
      "get": {
        "tags": [
          "call-controller"
        ],
        "summary": "[READ] подразделение -> вызовы -> пациент -> поиск карт по данным пациента",
        "operationId": "getChronicCardUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "path",
            "description": "subId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "callId",
            "in": "path",
            "description": "callId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "patientId",
            "in": "path",
            "description": "patientId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardGridDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/therapies": {
      "get": {
        "tags": [
          "therapy-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_40",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "result_id",
            "in": "query",
            "description": "result_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "is_local",
            "in": "query",
            "description": "is_local",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TherapyDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "therapy-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_31",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TherapyDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TherapyDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/therapies/{id}": {
      "get": {
        "tags": [
          "therapy-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_38",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TherapyDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "therapy-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_32",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TherapyDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TherapyDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "therapy-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TherapyDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/therapy_template_items": {
      "get": {
        "tags": [
          "therapy-template-item-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_42",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "query",
            "description": "template_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TherapyTemplateItemDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "therapy-template-item-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_33",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TherapyTemplateItemDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TherapyTemplateItemDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/therapy_template_items/{id}": {
      "get": {
        "tags": [
          "therapy-template-item-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_40",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TherapyTemplateItemDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "therapy-template-item-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_34",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TherapyTemplateItemDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TherapyTemplateItemDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/therapy_templates": {
      "get": {
        "tags": [
          "therapy-template-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_41",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "sub_id",
            "in": "query",
            "description": "sub_id",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TherapyTemplateDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "therapy-template-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_32",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TherapyTemplateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TherapyTemplateDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/therapy_templates/{id}": {
      "get": {
        "tags": [
          "therapy-template-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_39",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TherapyTemplateDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "therapy-template-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_33",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TherapyTemplateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TherapyTemplateDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/transport": {
      "get": {
        "tags": [
          "transport-controller"
        ],
        "summary": "возвращает список всех транспортных средств в подразделении",
        "operationId": "readAllUsingGET_44",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subId",
            "in": "query",
            "description": "subId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransportDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "transport-controller"
        ],
        "summary": "создание нового транспортного средства",
        "operationId": "createUsingPOST_35",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransportDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/transport/path": {
      "post": {
        "tags": [
          "transport-controller"
        ],
        "summary": "возвращает список всех транспортных средств c мониторинга",
        "operationId": "readPathUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "params",
            "description": "params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarPathParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MonPoint"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/transport/state_marks": {
      "get": {
        "tags": [
          "transport-controller"
        ],
        "summary": "readAllStateMarks",
        "operationId": "readAllStateMarksUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransportDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/transport/{id}": {
      "get": {
        "tags": [
          "transport-controller"
        ],
        "summary": "возвращает конкретное транспортное средство по id",
        "operationId": "readOneUsingGET_42",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "transport-controller"
        ],
        "summary": "обновление сведений об транспортном средстве",
        "operationId": "updateUsingPUT_36",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransportDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/transport_classes": {
      "get": {
        "tags": [
          "transport-class-controller"
        ],
        "summary": "возвращает список классов транспортных средств",
        "operationId": "readAllUsingGET_43",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransportClassDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "transport-class-controller"
        ],
        "summary": "создание нового класса транспортных средств",
        "operationId": "createUsingPOST_34",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransportClassDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportClassDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/transport_classes/{id}": {
      "get": {
        "tags": [
          "transport-class-controller"
        ],
        "summary": "возвращает класс транспортных средств по id",
        "operationId": "readOneUsingGET_41",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportClassDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "transport-class-controller"
        ],
        "summary": "обновление сведений о классе транспортных средств",
        "operationId": "updateUsingPUT_35",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransportClassDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportClassDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/transport_types": {
      "get": {
        "tags": [
          "transport-type-controller"
        ],
        "summary": "возвращает список типов транспортных средств",
        "operationId": "readAllUsingGET_45",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "deleted",
            "in": "query",
            "description": "deleted",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransportTypeDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "transport-type-controller"
        ],
        "summary": "создание нового типа транспортных средств",
        "operationId": "createUsingPOST_36",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransportTypeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportTypeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/transport_types/{id}": {
      "get": {
        "tags": [
          "transport-type-controller"
        ],
        "summary": "возвращает тип транспортных средств по id",
        "operationId": "readOneUsingGET_43",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportTypeDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "transport-type-controller"
        ],
        "summary": "обновление сведений о типе транспортных средств",
        "operationId": "updateUsingPUT_37",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransportTypeDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportTypeDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/units": {
      "get": {
        "tags": [
          "unit-controller"
        ],
        "summary": "readAll",
        "operationId": "readAllUsingGET_46",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Unit"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "unit-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_37",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "unit",
            "description": "unit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Unit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Unit"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/units/{code}": {
      "get": {
        "tags": [
          "unit-controller"
        ],
        "summary": "readOne",
        "operationId": "readOneUsingGET_44",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Unit"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "unit-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_38",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "unit",
            "description": "unit",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Unit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Unit"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "unit-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "CardResultIllegalActionsDto": {
      "type": "object",
      "properties": {
        "illegal_actions": {
          "type": "boolean"
        },
        "illegal_actions_text": {
          "type": "string"
        }
      }
    },
    "CallPatientPartDto": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean"
        },
        "patient_age_days": {
          "type": "integer",
          "format": "int32"
        },
        "patient_age_months": {
          "type": "integer",
          "format": "int32"
        },
        "patient_age_years": {
          "type": "integer",
          "format": "int32"
        },
        "patient_firstname": {
          "type": "string"
        },
        "patient_id": {
          "type": "integer",
          "format": "int64"
        },
        "patient_patronymic": {
          "type": "string"
        },
        "patient_secondname": {
          "type": "string"
        },
        "patient_sex": {
          "type": "integer",
          "format": "int32"
        },
        "patient_sex_name": {
          "type": "string"
        },
        "patient_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "patient_type_name": {
          "type": "string"
        }
      }
    },
    "CardResultDiagnosisDto": {
      "type": "object",
      "properties": {
        "complication_id": {
          "type": "integer",
          "format": "int64"
        },
        "complication_name": {
          "type": "string"
        },
        "concomitant_diagnosis": {
          "$ref": "#/definitions/MkbDto"
        },
        "main_diagnosis": {
          "$ref": "#/definitions/MkbDto"
        }
      }
    },
    "CallGeneralPartDto": {
      "type": "object",
      "properties": {
        "call_id": {
          "type": "integer",
          "format": "int64"
        },
        "call_number": {
          "type": "string"
        },
        "call_priority": {
          "type": "integer",
          "format": "int32"
        },
        "call_priority_name": {
          "type": "string"
        },
        "call_status": {
          "type": "string"
        },
        "call_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "call_type_name": {
          "type": "string"
        },
        "date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "is_unfounded": {
          "type": "boolean"
        },
        "performer_accept_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_accept_name": {
          "type": "string"
        },
        "performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_name": {
          "type": "string"
        },
        "performer_send_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_send_name": {
          "type": "string"
        },
        "primary_call_id": {
          "type": "integer",
          "format": "int64"
        },
        "primary_call_number": {
          "type": "string"
        },
        "reason_comment": {
          "type": "string"
        },
        "reason_id": {
          "type": "integer",
          "format": "int64"
        },
        "reason_name": {
          "type": "string"
        },
        "subdivision_accept_id": {
          "type": "integer",
          "format": "int64"
        },
        "subdivision_accept_name": {
          "type": "string"
        },
        "subdivision_id": {
          "type": "integer",
          "format": "int64"
        },
        "subdivision_name": {
          "type": "string"
        },
        "subdivision_send_id": {
          "type": "integer",
          "format": "int64"
        },
        "subdivision_send_name": {
          "type": "string"
        }
      }
    },
    "OutputStream": {
      "type": "object"
    },
    "Product": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "productType": {
          "$ref": "#/definitions/ProductType"
        },
        "unit_code": {
          "type": "string"
        }
      }
    },
    "CardAnamnesisHeaderDto": {
      "type": "object",
      "properties": {
        "is_created": {
          "type": "boolean"
        }
      }
    },
    "BrigadeScheduleUpdateDto": {
      "type": "object",
      "properties": {
        "period_details": {
          "$ref": "#/definitions/PeriodDetails"
        }
      }
    },
    "Document": {
      "type": "object",
      "properties": {
        "accepted": {
          "type": "boolean"
        },
        "archived": {
          "type": "boolean"
        },
        "date_doc": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "nomenclatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentNomenclature"
          }
        },
        "number_doc": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "performer": {
          "$ref": "#/definitions/Performer"
        },
        "placeFrom": {
          "$ref": "#/definitions/Place"
        },
        "placeTo": {
          "$ref": "#/definitions/Place"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LocalDate": {
      "type": "object",
      "properties": {
        "chronology": {
          "$ref": "#/definitions/IsoChronology"
        },
        "dayOfMonth": {
          "type": "integer",
          "format": "int32"
        },
        "dayOfWeek": {
          "type": "string",
          "enum": [
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        },
        "dayOfYear": {
          "type": "integer",
          "format": "int32"
        },
        "era": {
          "$ref": "#/definitions/Era"
        },
        "leapYear": {
          "type": "boolean"
        },
        "month": {
          "type": "string",
          "enum": [
            "JANUARY",
            "FEBRUARY",
            "MARCH",
            "APRIL",
            "MAY",
            "JUNE",
            "JULY",
            "AUGUST",
            "SEPTEMBER",
            "OCTOBER",
            "NOVEMBER",
            "DECEMBER"
          ]
        },
        "monthValue": {
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BrigadeCallDto": {
      "type": "object",
      "properties": {
        "call_id": {
          "type": "integer",
          "format": "int64"
        },
        "call_number": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "reason_extra": {
          "type": "boolean"
        },
        "reason_name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "state_date": {
          "$ref": "#/definitions/LocalDateTime"
        }
      }
    },
    "PerformerScheduller": {
      "type": "object",
      "properties": {
        "basic": {
          "type": "boolean"
        },
        "dateFrom": {
          "$ref": "#/definitions/LocalDate"
        },
        "dateTo": {
          "$ref": "#/definitions/LocalDate"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PerformerBrigScheduleCreateDto": {
      "type": "object",
      "properties": {
        "performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "period_details": {
          "$ref": "#/definitions/PeriodDetails"
        }
      }
    },
    "MobileCardDrug": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number"
        },
        "in_car": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "unit_code": {
          "type": "string"
        }
      }
    },
    "PharmacyItem": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "innerAmount": {
          "type": "integer",
          "format": "int64"
        },
        "nomenclatureItem": {
          "$ref": "#/definitions/NomenclatureItem"
        },
        "owner": {
          "$ref": "#/definitions/PharmacyOwner"
        }
      }
    },
    "Permission": {
      "type": "object",
      "properties": {
        "checked": {
          "type": "boolean"
        },
        "code": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        },
        "leaf": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "MODULE",
            "SECTION",
            "ACTION"
          ]
        }
      }
    },
    "ResultSet": {
      "type": "object",
      "properties": {
        "afterLast": {
          "type": "boolean"
        },
        "beforeFirst": {
          "type": "boolean"
        },
        "closed": {
          "type": "boolean"
        },
        "concurrency": {
          "type": "integer",
          "format": "int32"
        },
        "cursorName": {
          "type": "string"
        },
        "fetchDirection": {
          "type": "integer",
          "format": "int32"
        },
        "fetchSize": {
          "type": "integer",
          "format": "int32"
        },
        "first": {
          "type": "boolean"
        },
        "holdability": {
          "type": "integer",
          "format": "int32"
        },
        "last": {
          "type": "boolean"
        },
        "metaData": {
          "$ref": "#/definitions/ResultSetMetaData"
        },
        "row": {
          "type": "integer",
          "format": "int32"
        },
        "statement": {
          "$ref": "#/definitions/Statement"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "warnings": {
          "$ref": "#/definitions/SQLWarning"
        }
      }
    },
    "MobileCall": {
      "type": "object",
      "properties": {
        "build": {
          "type": "string"
        },
        "caller_name": {
          "type": "string"
        },
        "caller_phone": {
          "type": "string"
        },
        "cards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MobileCard"
          }
        },
        "city": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "flat": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "house": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "patients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MobilePatient"
          }
        },
        "reason_comment": {
          "type": "string"
        },
        "reason_extra": {
          "type": "boolean"
        },
        "street": {
          "type": "string"
        },
        "time": {
          "type": "string"
        }
      }
    },
    "DocumentNomenclature": {
      "type": "object",
      "properties": {
        "accepted": {
          "type": "boolean"
        },
        "adminConfig": {
          "type": "string"
        },
        "archived": {
          "type": "boolean"
        },
        "code": {
          "type": "string"
        },
        "date_doc": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "deleted": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "document": {
          "$ref": "#/definitions/Document"
        },
        "editable": {
          "type": "boolean"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "login": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nomenclatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentNomenclature"
          }
        },
        "number_doc": {
          "type": "string"
        },
        "online": {
          "type": "boolean"
        },
        "organization": {
          "type": "string"
        },
        "owner_id": {
          "type": "integer",
          "format": "int64"
        },
        "owner_name": {
          "type": "string"
        },
        "packaging": {
          "$ref": "#/definitions/Packaging"
        },
        "packaging_count": {
          "type": "number"
        },
        "password": {
          "type": "string"
        },
        "patronymic": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "product_count": {
          "type": "number"
        },
        "product_id": {
          "type": "integer",
          "format": "int64"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "secondName": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        },
        "skills": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Skill"
          }
        },
        "subdivisionId": {
          "type": "integer",
          "format": "int64"
        },
        "subdivisionName": {
          "type": "string"
        },
        "subdivision_id": {
          "type": "integer",
          "format": "int64"
        },
        "subdivision_name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "typeId": {
          "type": "integer",
          "format": "int64"
        },
        "typeName": {
          "type": "string"
        },
        "type_name": {
          "type": "string"
        },
        "unit_code": {
          "type": "string"
        },
        "unit_count": {
          "type": "number"
        },
        "userConfig": {
          "type": "string"
        },
        "workplaceSubdivisionId": {
          "type": "integer",
          "format": "int64"
        },
        "workplaceSubdivisionName": {
          "type": "string"
        }
      }
    },
    "ProductType": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CarPathParams": {
      "type": "object",
      "properties": {
        "date_from": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "date_to": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "maxRow": {
          "type": "integer",
          "format": "int32"
        },
        "polygon": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonPoint"
          }
        },
        "statemark": {
          "type": "string"
        }
      }
    },
    "Code": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "CardObjectivePercPartDto": {
      "type": "object",
      "properties": {
        "perc_lungs_sound_id": {
          "type": "integer",
          "format": "int64"
        },
        "perc_lungs_sound_name": {
          "type": "string"
        },
        "perc_lungs_sound_text": {
          "type": "string"
        }
      }
    },
    "CardObjectiveStomachPartDto": {
      "type": "object",
      "properties": {
        "stomach_ascites": {
          "type": "boolean"
        },
        "stomach_breathing_involved": {
          "type": "integer",
          "format": "int32"
        },
        "stomach_breathing_involved_name": {
          "type": "string"
        },
        "stomach_disklike": {
          "type": "boolean"
        },
        "stomach_hard": {
          "type": "boolean"
        },
        "stomach_infliat": {
          "type": "boolean"
        },
        "stomach_normal": {
          "type": "boolean"
        },
        "stomach_painful": {
          "type": "boolean"
        },
        "stomach_peritonit": {
          "type": "integer",
          "format": "int32"
        },
        "stomach_peritonit_name": {
          "type": "string"
        },
        "stomach_soft": {
          "type": "boolean"
        },
        "stomach_text": {
          "type": "string"
        },
        "stomach_unpainful": {
          "type": "boolean"
        }
      }
    },
    "TransportDto": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string"
        },
        "can_use": {
          "type": "boolean"
        },
        "class_id": {
          "type": "integer",
          "format": "int64"
        },
        "class_name": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "picture": {
          "type": "string"
        },
        "state_mark": {
          "type": "string"
        },
        "status_description": {
          "type": "string"
        },
        "status_id": {
          "type": "integer",
          "format": "int64"
        },
        "status_name": {
          "type": "string"
        },
        "sub_code": {
          "type": "string"
        },
        "sub_id": {
          "type": "integer",
          "format": "int64"
        },
        "sub_name": {
          "type": "string"
        },
        "type_id": {
          "type": "integer",
          "format": "int64"
        },
        "type_name": {
          "type": "string"
        }
      }
    },
    "CardAnamnesisPartDto": {
      "type": "object",
      "properties": {
        "allergic": {
          "$ref": "#/definitions/CardAnamnesisAllergicPartDto"
        },
        "complaints": {
          "$ref": "#/definitions/CardAnamnesisComplaintsPartDto"
        },
        "epidemic": {
          "$ref": "#/definitions/CardAnamnesisEpidemicPartDto"
        },
        "gynecologic": {
          "$ref": "#/definitions/CardAnamnesisGynecologicPartDto"
        },
        "header": {
          "$ref": "#/definitions/CardAnamnesisHeaderDto"
        },
        "illnes": {
          "$ref": "#/definitions/CardAnamnesisIllnesPartDto"
        }
      }
    },
    "MobileCardAddress": {
      "type": "object",
      "properties": {
        "building": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "flat": {
          "type": "string"
        },
        "house": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "region": {
          "type": "string"
        },
        "street": {
          "type": "string"
        }
      }
    },
    "Inventory": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "count": {
          "type": "number"
        },
        "count_current": {
          "type": "number"
        },
        "count_min": {
          "type": "number"
        },
        "date_inventory": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "deleted": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "nomenclatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InventoryNomenclature"
          }
        },
        "owner_id": {
          "type": "integer",
          "format": "int64"
        },
        "owner_name": {
          "type": "string"
        },
        "place": {
          "$ref": "#/definitions/Place"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "subdivision_id": {
          "type": "integer",
          "format": "int64"
        },
        "subdivision_name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "type_name": {
          "type": "string"
        },
        "unit_code": {
          "type": "string"
        }
      }
    },
    "MobilePatient": {
      "type": "object",
      "properties": {
        "age": {
          "type": "string"
        },
        "age_days": {
          "type": "integer",
          "format": "int32"
        },
        "age_months": {
          "type": "integer",
          "format": "int32"
        },
        "age_years": {
          "type": "integer",
          "format": "int32"
        },
        "birth_date": {
          "type": "string"
        },
        "citizenship": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "job": {
          "type": "string"
        },
        "job_position": {
          "type": "string"
        },
        "patronymic": {
          "type": "string"
        },
        "previous_cards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MobileCardChronic"
          }
        },
        "sex_id": {
          "type": "integer",
          "format": "int32"
        },
        "social_property_id": {
          "type": "integer",
          "format": "int32"
        },
        "surname": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "TherapyItemDto": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "product_name": {
          "type": "string"
        },
        "therapy_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MobileCardDocument": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "organisation": {
          "type": "string"
        },
        "serie": {
          "type": "string"
        },
        "type_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BrigadeScheduleDto": {
      "type": "object",
      "properties": {
        "active_calls": {
          "type": "integer",
          "format": "int64"
        },
        "brigade_id": {
          "type": "integer",
          "format": "int64"
        },
        "brigade_name": {
          "type": "string"
        },
        "brigade_status_id": {
          "type": "integer",
          "format": "int64"
        },
        "brigade_status_name": {
          "type": "string"
        },
        "brigade_type_code": {
          "type": "string"
        },
        "brigade_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "brigade_type_name": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "is_edited": {
          "type": "boolean"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "performers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerformerBrigScheduleDto"
          }
        },
        "period_details": {
          "$ref": "#/definitions/PeriodDetails"
        },
        "pharmacy_package_id": {
          "type": "integer",
          "format": "int64"
        },
        "pharmacy_package_name": {
          "type": "string"
        },
        "subdivision_id": {
          "type": "integer",
          "format": "int64"
        },
        "subdivision_name": {
          "type": "string"
        },
        "transports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransportBrigScheduleDto"
          }
        }
      }
    },
    "CardObjectiveOtherPartDto": {
      "type": "object",
      "properties": {
        "ad": {
          "type": "string"
        },
        "admax": {
          "type": "string"
        },
        "adn": {
          "type": "string"
        },
        "bodytemp": {
          "type": "string"
        },
        "chd": {
          "type": "string"
        },
        "chss": {
          "type": "string"
        },
        "glucometry": {
          "type": "string"
        },
        "ps": {
          "type": "string"
        },
        "pulse_oximetry": {
          "type": "string"
        }
      }
    },
    "CardObjectivePartDto": {
      "type": "object",
      "properties": {
        "addition": {
          "$ref": "#/definitions/CardObjectiveAdditionPartDto"
        },
        "alcohol": {
          "$ref": "#/definitions/CardObjectiveAlcoPartDto"
        },
        "breath": {
          "$ref": "#/definitions/CardObjectiveBreathPartDto"
        },
        "diuresis": {
          "$ref": "#/definitions/CardObjectiveDiuresisPartDto"
        },
        "dyspeptic": {
          "$ref": "#/definitions/CardObjectiveDyspepticPartDto"
        },
        "edema": {
          "$ref": "#/definitions/CardObjectiveEdemaPartDto"
        },
        "excreta": {
          "$ref": "#/definitions/CardObjectiveExcretaUrinePartDto"
        },
        "general_state": {
          "$ref": "#/definitions/CardObjectiveGeneralStatePartDto"
        },
        "glasgow": {
          "$ref": "#/definitions/CardObjectiveGlasgowPartDto"
        },
        "header": {
          "$ref": "#/definitions/CardObjectiveHeaderDto"
        },
        "heart": {
          "$ref": "#/definitions/CardObjectiveHeartPartDto"
        },
        "hemodynamics": {
          "$ref": "#/definitions/CardAnamnesisHemodynamicsPartDto"
        },
        "liver": {
          "$ref": "#/definitions/CardObjectiveLiverPartDto"
        },
        "lymph": {
          "$ref": "#/definitions/CardObjectiveLymphPartDto"
        },
        "other": {
          "$ref": "#/definitions/CardObjectiveOtherPartDto"
        },
        "perc": {
          "$ref": "#/definitions/CardObjectivePercPartDto"
        },
        "pupils": {
          "$ref": "#/definitions/CardObjectivePupilsDto"
        },
        "reflexes": {
          "$ref": "#/definitions/CardObjectiveReflexesDto"
        },
        "skin": {
          "$ref": "#/definitions/CardObjectiveSkinPartDto"
        },
        "stomach": {
          "$ref": "#/definitions/CardObjectiveStomachPartDto"
        },
        "throat": {
          "$ref": "#/definitions/CardObjectiveThroatPartDto"
        },
        "tongue": {
          "$ref": "#/definitions/CardObjectiveTonguePart"
        },
        "tonsils": {
          "$ref": "#/definitions/CardObjectiveTonsilsPartDto"
        },
        "wheezing": {
          "$ref": "#/definitions/CardObjectiveWheezingPartDto"
        }
      }
    },
    "MobileCardResult": {
      "type": "object",
      "properties": {
        "additional_diagnosis_id": {
          "type": "integer",
          "format": "int64"
        },
        "basic_diagnosis_id": {
          "type": "integer",
          "format": "int64"
        },
        "body_temperature": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "diagnosis_complications_id": {
          "type": "integer",
          "format": "int64"
        },
        "diagnosis_need_visitor_id": {
          "type": "integer",
          "format": "int64"
        },
        "ekg_after": {
          "type": "string"
        },
        "ekg_before": {
          "type": "string"
        },
        "glucometry": {
          "type": "string"
        },
        "medical_events": {
          "type": "string"
        },
        "medical_events_in_car": {
          "type": "string"
        },
        "palpitation": {
          "type": "string"
        },
        "palpitation_ad": {
          "type": "string"
        },
        "palpitation_adn": {
          "type": "string"
        },
        "palpitation_cd": {
          "type": "string"
        },
        "palpitation_ps": {
          "type": "string"
        },
        "palpitation_sat_02": {
          "type": "string"
        },
        "result_id": {
          "type": "integer",
          "format": "int64"
        },
        "transportation_data": {
          "type": "string"
        },
        "transportation_method_id": {
          "type": "integer",
          "format": "int64"
        },
        "transportation_place_id": {
          "type": "integer",
          "format": "int64"
        },
        "transportation_problems": {
          "type": "string"
        },
        "transportation_time": {
          "type": "string"
        },
        "type_id": {
          "type": "integer",
          "format": "int64"
        },
        "unlaw_actions": {
          "type": "string"
        }
      }
    },
    "CardObjectiveHeartPartDto": {
      "type": "object",
      "properties": {
        "heart_noise_id": {
          "type": "integer",
          "format": "int64"
        },
        "heart_noise_name": {
          "type": "string"
        },
        "heart_rate_id": {
          "type": "integer",
          "format": "int64"
        },
        "heart_rate_name": {
          "type": "string"
        },
        "heart_tone_id": {
          "type": "integer",
          "format": "int64"
        },
        "heart_tone_name": {
          "type": "string"
        }
      }
    },
    "DistrictDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "fias_id": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        }
      }
    },
    "MobileCardObjective": {
      "type": "object",
      "properties": {
        "adenoid_incrustation": {
          "type": "boolean"
        },
        "adenoid_size_id": {
          "type": "integer",
          "format": "int32"
        },
        "alcohol_air": {
          "type": "boolean"
        },
        "body_temperature": {
          "type": "string"
        },
        "breath_absent": {
          "type": "boolean"
        },
        "breath_bronchial": {
          "type": "boolean"
        },
        "breath_hard": {
          "type": "boolean"
        },
        "breath_puerile": {
          "type": "boolean"
        },
        "breath_smooth": {
          "type": "boolean"
        },
        "breath_vesicular": {
          "type": "boolean"
        },
        "breath_weak": {
          "type": "boolean"
        },
        "conscious_state_id": {
          "type": "integer",
          "format": "int64"
        },
        "ds_pupil_ratio_id": {
          "type": "integer",
          "format": "int64"
        },
        "ds_reflex_id": {
          "type": "integer",
          "format": "int64"
        },
        "emotional_lability": {
          "type": "boolean"
        },
        "epidermis_acrocyanosis": {
          "type": "boolean"
        },
        "epidermis_cyanotic": {
          "type": "boolean"
        },
        "epidermis_dry": {
          "type": "boolean"
        },
        "epidermis_earthy": {
          "type": "boolean"
        },
        "epidermis_hyperemic": {
          "type": "boolean"
        },
        "epidermis_icteric": {
          "type": "boolean"
        },
        "epidermis_normal": {
          "type": "boolean"
        },
        "epidermis_pale": {
          "type": "boolean"
        },
        "epidermis_profuse_sweat": {
          "type": "boolean"
        },
        "epidermis_rashes": {
          "type": "boolean"
        },
        "glucometry": {
          "type": "string"
        },
        "health_state_id": {
          "type": "integer",
          "format": "int64"
        },
        "inadequate_assessment": {
          "type": "boolean"
        },
        "instability_romberg": {
          "type": "boolean"
        },
        "lymph_nodes_localisation": {
          "type": "string"
        },
        "meningeal": {
          "type": "boolean"
        },
        "mucous_throat_id": {
          "type": "integer",
          "format": "int32"
        },
        "palpitation": {
          "type": "string"
        },
        "palpitation_ad": {
          "type": "string"
        },
        "palpitation_ad_max": {
          "type": "string"
        },
        "palpitation_adn": {
          "type": "string"
        },
        "palpitation_cd": {
          "type": "string"
        },
        "palpitation_noises": {
          "type": "boolean"
        },
        "palpitation_ps": {
          "type": "string"
        },
        "palpitation_sat_02": {
          "type": "string"
        },
        "palpitation_tone_id": {
          "type": "integer",
          "format": "int64"
        },
        "palpitation_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "pathological": {
          "type": "boolean"
        },
        "pupil_ratio_id": {
          "type": "integer",
          "format": "int64"
        },
        "reaction_to_light": {
          "type": "boolean"
        },
        "reflex_id": {
          "type": "integer",
          "format": "int64"
        },
        "sensitivity_of_lymph_nodes_id": {
          "type": "integer",
          "format": "int32"
        },
        "shaky_walk": {
          "type": "boolean"
        },
        "size_of_lymph_nodes_id": {
          "type": "integer",
          "format": "int32"
        },
        "speech_drunk_man": {
          "type": "boolean"
        },
        "swelling": {
          "type": "boolean"
        },
        "swelling_localisation": {
          "type": "string"
        }
      }
    },
    "MobileCardAnamnesis": {
      "type": "object",
      "properties": {
        "allergic_anamnesis_id": {
          "type": "integer",
          "format": "int32"
        },
        "born_diseases": {
          "type": "string"
        },
        "disease_anamnesis": {
          "type": "string"
        },
        "dont_like": {
          "type": "string"
        },
        "gynecological": {
          "type": "string"
        },
        "infect_patient_contact": {
          "type": "string"
        },
        "problems": {
          "type": "string"
        },
        "quarantine": {
          "type": "string"
        },
        "shit_frequency": {
          "type": "string"
        },
        "shit_id": {
          "type": "integer",
          "format": "int32"
        },
        "urine": {
          "type": "string"
        },
        "vaccination": {
          "type": "string"
        }
      }
    },
    "PerformerTypeDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CardResultTransferPatientDto": {
      "type": "object",
      "properties": {
        "brigade_number": {
          "type": "string"
        },
        "time": {
          "$ref": "#/definitions/LocalDateTime"
        }
      }
    },
    "CardObjectiveDyspepticPartDto": {
      "type": "object",
      "properties": {
        "dyspeptic_diarrhea": {
          "type": "boolean"
        },
        "dyspeptic_nausea": {
          "type": "boolean"
        },
        "dyspeptic_retch": {
          "type": "boolean"
        },
        "dyspeptics_no": {
          "type": "boolean"
        }
      }
    },
    "InquirerTreeNode": {
      "type": "object",
      "properties": {
        "answer_title": {
          "type": "string"
        },
        "expanded": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "is_deleted": {
          "type": "boolean"
        },
        "is_editable": {
          "type": "boolean"
        },
        "leaf": {
          "type": "boolean"
        },
        "parent_id": {
          "type": "integer",
          "format": "int64"
        },
        "query_title": {
          "type": "string"
        },
        "reason_id": {
          "type": "integer",
          "format": "int64"
        },
        "reason_title": {
          "type": "string"
        }
      }
    },
    "BrigadeAppointRequestDto": {
      "type": "object",
      "properties": {
        "brigade_schedule_id": {
          "type": "integer",
          "format": "int64"
        },
        "receiving_type_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SkillDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CallLocationPartDto": {
      "type": "object",
      "properties": {
        "call_id": {
          "type": "integer",
          "format": "int64"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Mkb": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "editable": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "info": {
          "type": "string"
        },
        "isFinal": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "nodeCount": {
          "type": "integer",
          "format": "int64"
        },
        "parent": {
          "$ref": "#/definitions/Mkb"
        },
        "parentCode": {
          "type": "string"
        }
      }
    },
    "Statement": {
      "type": "object",
      "properties": {
        "closeOnCompletion": {
          "type": "boolean"
        },
        "closed": {
          "type": "boolean"
        },
        "connection": {
          "$ref": "#/definitions/Connection"
        },
        "fetchDirection": {
          "type": "integer",
          "format": "int32"
        },
        "fetchSize": {
          "type": "integer",
          "format": "int32"
        },
        "generatedKeys": {
          "$ref": "#/definitions/ResultSet"
        },
        "largeMaxRows": {
          "type": "integer",
          "format": "int64"
        },
        "largeUpdateCount": {
          "type": "integer",
          "format": "int64"
        },
        "maxFieldSize": {
          "type": "integer",
          "format": "int32"
        },
        "maxRows": {
          "type": "integer",
          "format": "int32"
        },
        "moreResults": {
          "type": "boolean"
        },
        "poolable": {
          "type": "boolean"
        },
        "queryTimeout": {
          "type": "integer",
          "format": "int32"
        },
        "resultSet": {
          "$ref": "#/definitions/ResultSet"
        },
        "resultSetConcurrency": {
          "type": "integer",
          "format": "int32"
        },
        "resultSetHoldability": {
          "type": "integer",
          "format": "int32"
        },
        "resultSetType": {
          "type": "integer",
          "format": "int32"
        },
        "updateCount": {
          "type": "integer",
          "format": "int32"
        },
        "warnings": {
          "$ref": "#/definitions/SQLWarning"
        }
      }
    },
    "CardObjectiveAdditionPartDto": {
      "type": "object",
      "properties": {
        "addition_objective": {
          "type": "string"
        }
      }
    },
    "MobileCardPatient": {
      "type": "object",
      "properties": {
        "Dms": {
          "type": "string"
        },
        "Oms": {
          "type": "string"
        },
        "OmsOrganisation": {
          "type": "string"
        },
        "age_days": {
          "type": "integer",
          "format": "int32"
        },
        "age_months": {
          "type": "integer",
          "format": "int32"
        },
        "age_years": {
          "type": "integer",
          "format": "int32"
        },
        "birth_date": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "job": {
          "type": "string"
        },
        "job_position": {
          "type": "string"
        },
        "patronymic": {
          "type": "string"
        },
        "sex_id": {
          "type": "integer",
          "format": "int32"
        },
        "social_status_id": {
          "type": "integer",
          "format": "int64"
        },
        "surname": {
          "type": "string"
        },
        "type_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ListDto«string»": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Connection": {
      "type": "object",
      "properties": {
        "autoCommit": {
          "type": "boolean"
        },
        "catalog": {
          "type": "string"
        },
        "clientInfo": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "closed": {
          "type": "boolean"
        },
        "holdability": {
          "type": "integer",
          "format": "int32"
        },
        "metaData": {
          "$ref": "#/definitions/DatabaseMetaData"
        },
        "networkTimeout": {
          "type": "integer",
          "format": "int32"
        },
        "readOnly": {
          "type": "boolean"
        },
        "schema": {
          "type": "string"
        },
        "transactionIsolation": {
          "type": "integer",
          "format": "int32"
        },
//        "typeMap": {
//          "type": "object",
//          "additionalProperties": {
//            "$ref": "#/definitions/Class«object»"
//          }
//        },
        "warnings": {
          "$ref": "#/definitions/SQLWarning"
        }
      }
    },
    "InquirerInCallDto": {
      "type": "object",
      "properties": {
        "basic_reason_id": {
          "type": "integer",
          "format": "int64"
        },
        "brigade_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrigadeTypeDto"
          }
        },
        "extra": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InquirerInCallDto"
          }
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "HospitalDto": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/FiasAddressDto"
        },
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "district_code": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "name": {
          "type": "string"
        },
        "par_code": {
          "type": "string"
        },
        "par_id": {
          "type": "integer",
          "format": "int64"
        },
        "par_name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "picture": {
          "type": "string"
        },
        "type_code": {
          "type": "string"
        },
        "type_id": {
          "type": "integer",
          "format": "int64"
        },
        "type_name": {
          "type": "string"
        },
        "website": {
          "type": "string"
        }
      }
    },
    "Medicine": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "unit_code": {
          "type": "string"
        }
      }
    },
    "PerformerShortDto": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "patronymic": {
          "type": "string"
        },
        "second_name": {
          "type": "string"
        },
        "type_id": {
          "type": "integer",
          "format": "int64"
        },
        "type_name": {
          "type": "string"
        }
      }
    },
    "CardObjectiveDiuresisPartDto": {
      "type": "object",
      "properties": {
        "diuresis_disuria": {
          "type": "boolean"
        },
        "diuresis_hematuria": {
          "type": "boolean"
        },
        "diuresis_n": {
          "type": "boolean"
        },
        "diuresis_oliguria": {
          "type": "boolean"
        },
        "lion_tapping_left": {
          "type": "boolean"
        },
        "lion_tapping_right": {
          "type": "boolean"
        }
      }
    },
    "BrigadeDto": {
      "type": "object",
      "properties": {
        "br_type_code": {
          "type": "string"
        },
        "br_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "br_type_name": {
          "type": "string"
        },
        "brigade_receiving_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "brigade_receiving_type_name": {
          "type": "string"
        },
        "brigade_status_id": {
          "type": "integer",
          "format": "int64"
        },
        "brigade_status_name": {
          "type": "string"
        },
        "can_use": {
          "type": "boolean"
        },
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "full_name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "name": {
          "type": "string"
        },
        "on_duty": {
          "type": "boolean"
        },
        "on_duty_comment": {
          "type": "string"
        },
        "performers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerformerDto"
          }
        },
        "picture": {
          "type": "string"
        },
        "status_time": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "sub_code": {
          "type": "string"
        },
        "sub_id": {
          "type": "integer",
          "format": "int64"
        },
        "transport_id": {
          "type": "integer",
          "format": "int64"
        },
        "transport_state_mark": {
          "type": "string"
        },
        "workplace_id": {
          "type": "integer",
          "format": "int64"
        },
        "workplace_name": {
          "type": "string"
        }
      }
    },
    "CardObjectiveEdemaPartDto": {
      "type": "object",
      "properties": {
        "titles": {
          "type": "boolean"
        },
        "titles_text": {
          "type": "string"
        }
      }
    },
    "CardObjectiveGeneralStatePartDto": {
      "type": "object",
      "properties": {
        "behaviour_id": {
          "type": "integer",
          "format": "int64"
        },
        "behaviour_name": {
          "type": "string"
        },
        "conscious_id": {
          "type": "integer",
          "format": "int64"
        },
        "conscious_name": {
          "type": "string"
        },
        "general_state_id": {
          "type": "integer",
          "format": "int64"
        },
        "general_state_name": {
          "type": "string"
        }
      }
    },
    "Place": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "owner_id": {
          "type": "integer",
          "format": "int64"
        },
        "owner_name": {
          "type": "string"
        },
        "subdivision_id": {
          "type": "integer",
          "format": "int64"
        },
        "subdivision_name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "STORAGE",
            "PACKAGE"
          ]
        },
        "type_name": {
          "type": "string"
        }
      }
    },
    "CardResultEfficiencyAssistance": {
      "type": "object",
      "properties": {
        "ad": {
          "type": "string"
        },
        "chd": {
          "type": "string"
        },
        "chss": {
          "type": "string"
        },
        "glucometry": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "pulse": {
          "type": "string"
        },
        "pulse_oximetry": {
          "type": "string"
        },
        "temperature": {
          "type": "string"
        },
        "work_ad": {
          "type": "string"
        }
      }
    },
    "SQLWarning": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "localizedMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "nextException": {
          "$ref": "#/definitions/SQLException"
        },
        "nextWarning": {
          "$ref": "#/definitions/SQLWarning"
        },
        "sqlstate": {
          "type": "string"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "TransportTypeDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TransportBrigScheduleUpdateDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "period_details": {
          "$ref": "#/definitions/PeriodDetails"
        },
        "transport_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CardAnamnesisAllergicPartDto": {
      "type": "object",
      "properties": {
        "allergic_anamnesis": {
          "type": "integer",
          "format": "int32"
        },
        "allergic_anamnesis_name": {
          "type": "string"
        },
        "allergic_anamnesis_text": {
          "type": "string"
        }
      }
    },
    "InventoryNomenclature": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "inventory_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "packaging_count": {
          "type": "number"
        },
        "packaging_count_current": {
          "type": "number"
        },
        "product_count": {
          "type": "number"
        },
        "product_count_current": {
          "type": "number"
        },
        "product_id": {
          "type": "integer",
          "format": "int64"
        },
        "unit_code": {
          "type": "string"
        },
        "unit_count": {
          "type": "number"
        }
      }
    },
    "ResultSetMetaData": {
      "type": "object",
      "properties": {
        "columnCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Container": {
      "type": "object",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "list": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "PeriodDetails": {
      "type": "object",
      "properties": {
        "date_from": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "date_to": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "duty_comment": {
          "type": "string"
        },
        "duty_end_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "duty_start_date": {
          "$ref": "#/definitions/LocalDateTime"
        }
      }
    },
    "CardObjectiveWheezingPartDto": {
      "type": "object",
      "properties": {
        "lungs_wheezing_id": {
          "type": "integer",
          "format": "int64"
        },
        "lungs_wheezing_name": {
          "type": "string"
        },
        "lungs_wheezing_text": {
          "type": "string"
        }
      }
    },
    "TreeNode": {
      "type": "object",
      "properties": {
        "count_active": {
          "type": "integer",
          "format": "int32"
        },
        "count_all": {
          "type": "integer",
          "format": "int32"
        },
        "expanded": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TreeNode"
          }
        },
        "leaf": {
          "type": "boolean"
        },
        "loaded": {
          "type": "boolean"
        },
        "text": {
          "type": "string"
        },
        "typeId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TransportBrigScheduleAvailableDto": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string"
        },
        "periods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Period"
          }
        },
        "statemark": {
          "type": "string"
        },
        "transport_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CardSideTwoDto": {
      "type": "object",
      "properties": {
        "anamnesis": {
          "$ref": "#/definitions/CardAnamnesisPartDto"
        },
        "objective": {
          "$ref": "#/definitions/CardObjectivePartDto"
        }
      }
    },
    "TransportBrigScheduleDto": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "period_details": {
          "$ref": "#/definitions/PeriodDetails"
        },
        "statemark": {
          "type": "string"
        },
        "transport_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CardObjectiveHeaderDto": {
      "type": "object",
      "properties": {
        "is_created": {
          "type": "boolean"
        }
      }
    },
    "PGgeometry": {
      "type": "object",
      "properties": {
        "geoType": {
          "type": "integer",
          "format": "int32"
        },
        "geometry": {
          "$ref": "#/definitions/Geometry"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ReportRequestDto": {
      "type": "object",
      "properties": {
        "am": {
          "type": "string"
        },
        "apu": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "dateFromAsLocalDateTime": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "dateToAsLocalDateTime": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "date_from": {
          "type": "string"
        },
        "date_to": {
          "type": "string"
        },
        "equip_id": {
          "type": "integer",
          "format": "int64"
        },
        "format": {
          "type": "integer",
          "format": "int32"
        },
        "image": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        },
        "sub_id": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ChatMessage": {
      "type": "object",
      "properties": {
        "blob": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "chat_id": {
          "type": "integer",
          "format": "int64"
        },
        "date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "sender_id": {
          "type": "integer",
          "format": "int64"
        },
        "sender_name": {
          "type": "string"
        },
        "sender_position": {
          "type": "string"
        },
        "sender_subdivision_name": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4"
          ]
        },
        "was_read": {
          "type": "boolean"
        }
      }
    },
    "TherapyTemplateItemDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "group_id": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "template_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Inquirer": {
      "type": "object",
      "properties": {
        "answer": {
          "type": "string"
        },
        "brigadeTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrigadeType"
          }
        },
        "childs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Inquirer"
          }
        },
        "codes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deleted": {
          "type": "boolean"
        },
        "editable": {
          "type": "boolean"
        },
        "final": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isFinal": {
          "type": "boolean"
        },
        "parent": {
          "$ref": "#/definitions/Inquirer"
        },
        "query": {
          "type": "string"
        },
        "reasonBasic": {
          "type": "boolean"
        },
        "reasonComment": {
          "type": "string"
        },
        "reasonExtra": {
          "type": "boolean"
        },
        "reasonName": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "CardResultActiveVisitDto": {
      "type": "object",
      "properties": {
        "active_visit_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "active_visit_hours": {
          "type": "integer",
          "format": "int32"
        },
        "active_visit_type_code": {
          "type": "string"
        },
        "active_visit_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "active_visit_type_name": {
          "type": "string"
        }
      }
    },
    "CardObjectiveLiverPartDto": {
      "type": "object",
      "properties": {
        "liver_normal_large": {
          "type": "integer",
          "format": "int32"
        },
        "liver_normal_large_name": {
          "type": "string"
        },
        "liver_ortner": {
          "type": "boolean"
        },
        "liver_size_text": {
          "type": "string"
        }
      }
    },
    "DatabaseMetaData": {
      "type": "object",
      "properties": {
        "catalogAtStart": {
          "type": "boolean"
        },
        "catalogSeparator": {
          "type": "string"
        },
        "catalogTerm": {
          "type": "string"
        },
        "catalogs": {
          "$ref": "#/definitions/ResultSet"
        },
        "clientInfoProperties": {
          "$ref": "#/definitions/ResultSet"
        },
        "connection": {
          "$ref": "#/definitions/Connection"
        },
        "databaseMajorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "databaseMinorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "databaseProductName": {
          "type": "string"
        },
        "databaseProductVersion": {
          "type": "string"
        },
        "defaultTransactionIsolation": {
          "type": "integer",
          "format": "int32"
        },
        "driverMajorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "driverMinorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "driverName": {
          "type": "string"
        },
        "driverVersion": {
          "type": "string"
        },
        "extraNameCharacters": {
          "type": "string"
        },
        "identifierQuoteString": {
          "type": "string"
        },
        "jdbcmajorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "jdbcminorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "maxBinaryLiteralLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxCatalogNameLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxCharLiteralLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxColumnNameLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxColumnsInGroupBy": {
          "type": "integer",
          "format": "int32"
        },
        "maxColumnsInIndex": {
          "type": "integer",
          "format": "int32"
        },
        "maxColumnsInOrderBy": {
          "type": "integer",
          "format": "int32"
        },
        "maxColumnsInSelect": {
          "type": "integer",
          "format": "int32"
        },
        "maxColumnsInTable": {
          "type": "integer",
          "format": "int32"
        },
        "maxConnections": {
          "type": "integer",
          "format": "int32"
        },
        "maxCursorNameLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxIndexLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxLogicalLobSize": {
          "type": "integer",
          "format": "int64"
        },
        "maxProcedureNameLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxRowSize": {
          "type": "integer",
          "format": "int32"
        },
        "maxSchemaNameLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxStatementLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxStatements": {
          "type": "integer",
          "format": "int32"
        },
        "maxTableNameLength": {
          "type": "integer",
          "format": "int32"
        },
        "maxTablesInSelect": {
          "type": "integer",
          "format": "int32"
        },
        "maxUserNameLength": {
          "type": "integer",
          "format": "int32"
        },
        "numericFunctions": {
          "type": "string"
        },
        "procedureTerm": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "resultSetHoldability": {
          "type": "integer",
          "format": "int32"
        },
        "rowIdLifetime": {
          "type": "string",
          "enum": [
            "ROWID_UNSUPPORTED",
            "ROWID_VALID_OTHER",
            "ROWID_VALID_SESSION",
            "ROWID_VALID_TRANSACTION",
            "ROWID_VALID_FOREVER"
          ]
        },
        "schemaTerm": {
          "type": "string"
        },
        "schemas": {
          "$ref": "#/definitions/ResultSet"
        },
        "searchStringEscape": {
          "type": "string"
        },
        "sqlkeywords": {
          "type": "string"
        },
        "sqlstateType": {
          "type": "integer",
          "format": "int32"
        },
        "stringFunctions": {
          "type": "string"
        },
        "systemFunctions": {
          "type": "string"
        },
        "tableTypes": {
          "$ref": "#/definitions/ResultSet"
        },
        "timeDateFunctions": {
          "type": "string"
        },
        "typeInfo": {
          "$ref": "#/definitions/ResultSet"
        },
        "url": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "MobileCard": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/MobileCardAddress"
        },
        "anamnesis": {
          "$ref": "#/definitions/MobileCardAnamnesis"
        },
        "document": {
          "$ref": "#/definitions/MobileCardDocument"
        },
        "drugs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MobileCardDrug"
          }
        },
        "objective_data": {
          "$ref": "#/definitions/MobileCardObjective"
        },
        "patient": {
          "$ref": "#/definitions/MobileCardPatient"
        },
        "result": {
          "$ref": "#/definitions/MobileCardResult"
        }
      }
    },
    "CardResultReasonDto": {
      "type": "object",
      "properties": {
        "accident_type_code": {
          "type": "string"
        },
        "accident_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "accident_type_name": {
          "type": "string"
        },
        "death_condition_id": {
          "type": "integer",
          "format": "int64"
        },
        "death_condition_name": {
          "type": "string"
        },
        "death_time": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "intoxication_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "intoxication_type_name": {
          "type": "string"
        },
        "reason_type_code": {
          "type": "string"
        },
        "reason_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "reason_type_name": {
          "type": "string"
        }
      }
    },
    "RoutingPointDto": {
      "type": "object",
      "properties": {
        "x1": {
          "type": "number",
          "format": "double"
        },
        "x2": {
          "type": "number",
          "format": "double"
        },
        "y1": {
          "type": "number",
          "format": "double"
        },
        "y2": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CardDto": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/CardResultDto"
        },
        "side_one": {
          "$ref": "#/definitions/CardSideOneDto"
        },
        "side_two": {
          "$ref": "#/definitions/CardSideTwoDto"
        },
        "similars": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TransferAddresseeDto": {
      "type": "object",
      "properties": {
        "reconended_brigade_id": {
          "type": "integer",
          "format": "int64"
        },
        "subdivision_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PharmacyDto": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "code": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "document_id": {
          "type": "integer",
          "format": "int64"
        },
        "document_name": {
          "type": "string"
        },
        "drug_id": {
          "type": "integer",
          "format": "int64"
        },
        "expiry_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "full_name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "inner_amount": {
          "type": "integer",
          "format": "int64"
        },
        "is_reusable": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupBagItemDto"
          }
        },
        "matrix_code": {
          "type": "string"
        },
        "matrix_id": {
          "type": "integer",
          "format": "int64"
        },
        "matrix_name": {
          "type": "string"
        },
        "minimum": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "nomenclature_id": {
          "type": "integer",
          "format": "int64"
        },
        "owner_id": {
          "type": "integer",
          "format": "int64"
        },
        "series_number": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CallSimilarRequestDto": {
      "type": "object",
      "properties": {
        "ao_full_name": {
          "type": "string"
        },
        "declarant_phone": {
          "type": "string"
        },
        "district_guid": {
          "type": "string"
        },
        "house": {
          "type": "string"
        },
        "patient": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallPatientPartDto"
          }
        }
      }
    },
    "District": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "editable": {
          "type": "boolean"
        },
        "fiasId": {
          "type": "integer",
          "format": "int64"
        },
        "geometry": {
          "$ref": "#/definitions/PGgeometry"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "osmGid": {
          "type": "integer",
          "format": "int64"
        },
        "osmId": {
          "type": "integer",
          "format": "int64"
        },
        "zone": {
          "type": "string"
        }
      }
    },
    "LocalDateTime": {
      "type": "object",
      "properties": {
        "chronology": {
          "$ref": "#/definitions/Chronology"
        },
        "dayOfMonth": {
          "type": "integer",
          "format": "int32"
        },
        "dayOfWeek": {
          "type": "string",
          "enum": [
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        },
        "dayOfYear": {
          "type": "integer",
          "format": "int32"
        },
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "type": "string",
          "enum": [
            "JANUARY",
            "FEBRUARY",
            "MARCH",
            "APRIL",
            "MAY",
            "JUNE",
            "JULY",
            "AUGUST",
            "SEPTEMBER",
            "OCTOBER",
            "NOVEMBER",
            "DECEMBER"
          ]
        },
        "monthValue": {
          "type": "integer",
          "format": "int32"
        },
        "nano": {
          "type": "integer",
          "format": "int32"
        },
        "second": {
          "type": "integer",
          "format": "int32"
        },
        "year": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BagMatrixItemDto": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "bag_id": {
          "type": "integer",
          "format": "int64"
        },
        "code": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BagItemDto"
          }
        },
        "nomenclature_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SQLException": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "localizedMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "nextException": {
          "$ref": "#/definitions/SQLException"
        },
        "sqlstate": {
          "type": "string"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "PerformerBrigScheduleDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "is_major": {
          "type": "boolean"
        },
        "performer_first_name": {
          "type": "string"
        },
        "performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_patronymic": {
          "type": "string"
        },
        "performer_second_name": {
          "type": "string"
        },
        "performer_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_type_name": {
          "type": "string"
        },
        "period_details": {
          "$ref": "#/definitions/PeriodDetails"
        },
        "short_name": {
          "type": "string"
        }
      }
    },
    "Field": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "CardObjectiveThroatPartDto": {
      "type": "object",
      "properties": {
        "multiple_zeva_clean_hyper": {
          "type": "integer",
          "format": "int32"
        },
        "multiple_zeva_clean_hyper_name": {
          "type": "string"
        }
      }
    },
    "SubdivisionFlatDto": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/FiasAddressDto"
        },
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "par_code": {
          "type": "string"
        },
        "par_id": {
          "type": "integer",
          "format": "int64"
        },
        "par_name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "picture": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "type_code": {
          "type": "string"
        },
        "type_id": {
          "type": "integer",
          "format": "int64"
        },
        "type_name": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "zone": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          }
        },
        "zone_exist": {
          "type": "boolean"
        }
      }
    },
    "MonPoint": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "row": {
          "type": "integer",
          "format": "int32"
        },
        "stateMark": {
          "type": "string"
        }
      }
    },
    "NotificationObject": {
      "type": "object",
      "properties": {
        "current_time": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "incomings": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CardAnamnesisPartDtoFLAT": {
      "type": "object",
      "properties": {
        "allergic_anamnesis": {
          "type": "integer",
          "format": "int32"
        },
        "allergic_anamnesis_text": {
          "type": "string"
        },
        "complaints_anamnesis": {
          "type": "string"
        },
        "gynecologic_anamnesis": {
          "type": "string"
        },
        "illnes_anamnesis": {
          "type": "string"
        },
        "infect_contacts": {
          "type": "string"
        },
        "is_created": {
          "type": "boolean"
        },
        "past_illneses": {
          "type": "string"
        },
        "quarantine": {
          "type": "string"
        },
        "vaccination": {
          "type": "string"
        }
      }
    },
    "BrigadeCalendarDto": {
      "type": "object"
    },
    "ChatUser": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "author": {
          "type": "boolean"
        },
        "chatMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChatMessage"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "performer": {
          "$ref": "#/definitions/Performer"
        },
        "unreadCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SubdivisionTypeDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "par_code": {
          "type": "string"
        },
        "par_id": {
          "type": "integer",
          "format": "int64"
        },
        "par_name": {
          "type": "string"
        },
        "type_code": {
          "type": "string"
        },
        "type_id": {
          "type": "integer",
          "format": "int64"
        },
        "type_name": {
          "type": "string"
        }
      }
    },
    "Report": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "file_name": {
          "type": "string"
        },
        "format": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2",
            "3"
          ]
        },
        "group_code": {
          "type": "string"
        },
        "group_name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdate": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "name": {
          "type": "string"
        },
        "nn": {
          "type": "integer",
          "format": "int32"
        },
        "performer": {
          "type": "string"
        },
        "script": {
          "type": "string"
        },
        "sub_id": {
          "type": "integer",
          "format": "int64"
        },
        "sub_name": {
          "type": "string"
        },
        "template": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "0",
            "1"
          ]
        }
      }
    },
    "InputStream": {
      "type": "object"
    },
    "PharmacyNomenclatureDto": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "company": {
          "type": "string"
        },
        "drug_id": {
          "type": "integer",
          "format": "int64"
        },
        "expiry_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "full_name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "matrix_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "series_number": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListDto«Permission»": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CardSubdivisionHeadDoctorPartDto": {
      "type": "object",
      "properties": {
        "subdivision_head_doctor_checked": {
          "type": "boolean"
        },
        "subdivision_head_doctor_comment": {
          "type": "string"
        },
        "subdivision_head_doctor_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "subdivision_head_doctor_id": {
          "type": "integer",
          "format": "int64"
        },
        "subdivision_head_doctor_name": {
          "type": "string"
        }
      }
    },
    "View": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        }
      }
    },
    "ReportGroup": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportGroup"
          }
        },
        "code": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "leaf": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "BagDto": {
      "type": "object",
      "properties": {
        "date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BagItemDto"
          }
        },
        "matrix_code": {
          "type": "string"
        },
        "matrix_id": {
          "type": "integer",
          "format": "int64"
        },
        "matrix_name": {
          "type": "string"
        },
        "nomenclature_id": {
          "type": "integer",
          "format": "int64"
        },
        "owner_id": {
          "type": "integer",
          "format": "int64"
        },
        "owner_name": {
          "type": "string"
        },
        "performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_name": {
          "type": "string"
        },
        "series_number": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Skill": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "commonName": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "editable": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CardResultHeaderDto": {
      "type": "object",
      "properties": {
        "is_created": {
          "type": "boolean"
        }
      }
    },
    "CardObjectiveSkinPartDto": {
      "type": "object",
      "properties": {
        "skin_integ_acrosian": {
          "type": "boolean"
        },
        "skin_integ_cyanotic": {
          "type": "boolean"
        },
        "skin_integ_dry": {
          "type": "boolean"
        },
        "skin_integ_earthy": {
          "type": "boolean"
        },
        "skin_integ_hyperemetic": {
          "type": "boolean"
        },
        "skin_integ_icteric": {
          "type": "boolean"
        },
        "skin_integ_marbleness": {
          "type": "boolean"
        },
        "skin_integ_normal": {
          "type": "boolean"
        },
        "skin_integ_pale": {
          "type": "boolean"
        },
        "skin_integ_profuse": {
          "type": "boolean"
        },
        "skin_integ_rashes": {
          "type": "boolean"
        }
      }
    },
    "TherapyDto": {
      "type": "object",
      "properties": {
        "date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "is_local": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TherapyItemDto"
          }
        },
        "result_id": {
          "type": "integer",
          "format": "int64"
        },
        "template_id": {
          "type": "integer",
          "format": "int64"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "CardResultDtoFLAT": {
      "type": "object",
      "properties": {
        "accident_type": {
          "type": "integer",
          "format": "int32"
        },
        "accident_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "accident_type_name": {
          "type": "string"
        },
        "active_visit_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "active_visit_hours": {
          "type": "integer",
          "format": "int32"
        },
        "active_visit_type": {
          "type": "integer",
          "format": "int32"
        },
        "active_visit_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "active_visit_type_name": {
          "type": "string"
        },
        "assistance_result_id": {
          "type": "integer",
          "format": "int64"
        },
        "bandages": {
          "type": "integer",
          "format": "int32"
        },
        "catheters": {
          "type": "integer",
          "format": "int32"
        },
        "comments": {
          "type": "string"
        },
        "complication_id": {
          "type": "integer",
          "format": "int64"
        },
        "concomitant_diagnosis": {
          "$ref": "#/definitions/MkbDto"
        },
        "death_condition": {
          "type": "integer",
          "format": "int32"
        },
        "death_condition_id": {
          "type": "integer",
          "format": "int64"
        },
        "death_condition_name": {
          "type": "string"
        },
        "death_time": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "ekg_ch_s_s": {
          "type": "integer",
          "format": "int32"
        },
        "ekg_ch_s_s_after": {
          "type": "integer",
          "format": "int32"
        },
        "ekg_comments": {
          "type": "string"
        },
        "ekg_comments_after": {
          "type": "string"
        },
        "ekg_rhythm": {
          "type": "string"
        },
        "ekg_rhythm_after": {
          "type": "string"
        },
        "hosp_complications": {
          "type": "boolean"
        },
        "hosp_complications_text": {
          "type": "string"
        },
        "hosp_reason": {
          "type": "integer",
          "format": "int32"
        },
        "hosp_reason_name": {
          "type": "string"
        },
        "hosp_to_id": {
          "type": "integer",
          "format": "int64"
        },
        "hosp_to_name": {
          "type": "string"
        },
        "hosp_transportation": {
          "type": "integer",
          "format": "int32"
        },
        "hosp_transportation_id": {
          "type": "integer",
          "format": "int64"
        },
        "hosp_transportation_name": {
          "type": "string"
        },
        "illegal_actions": {
          "type": "boolean"
        },
        "illegal_actions_text": {
          "type": "string"
        },
        "intoxication_type": {
          "type": "integer",
          "format": "int32"
        },
        "intoxication_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "intoxication_type_name": {
          "type": "string"
        },
        "is_created": {
          "type": "boolean"
        },
        "local_CHD": {
          "type": "string"
        },
        "local_CHSS": {
          "type": "string"
        },
        "local_ad": {
          "type": "string"
        },
        "local_glucometry": {
          "type": "string"
        },
        "local_pulse": {
          "type": "string"
        },
        "local_pulse_oximetry": {
          "type": "string"
        },
        "local_temperature": {
          "type": "string"
        },
        "local_therapies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TherapyDto"
          }
        },
        "local_therapy": {
          "type": "string"
        },
        "local_work_ad": {
          "type": "string"
        },
        "main_diagnosis": {
          "$ref": "#/definitions/MkbDto"
        },
        "other_materials": {
          "type": "string"
        },
        "reason_type": {
          "type": "integer",
          "format": "int32"
        },
        "reason_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "reason_type_name": {
          "type": "string"
        },
        "syringes": {
          "type": "integer",
          "format": "int32"
        },
        "transfer_patient_brigade": {
          "type": "string"
        },
        "transfer_patient_time": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "transfusion_systems": {
          "type": "integer",
          "format": "int32"
        },
        "transport_CHD": {
          "type": "string"
        },
        "transport_CHSS": {
          "type": "string"
        },
        "transport_ad": {
          "type": "string"
        },
        "transport_glucometry": {
          "type": "string"
        },
        "transport_pulse": {
          "type": "string"
        },
        "transport_pulse_oximetry": {
          "type": "string"
        },
        "transport_temperature": {
          "type": "string"
        },
        "transport_therapies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TherapyDto"
          }
        },
        "transport_therapy": {
          "type": "string"
        },
        "transport_work_ad": {
          "type": "string"
        },
        "transporting_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "transporting_type": {
          "type": "integer",
          "format": "int32"
        },
        "transporting_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "transporting_type_name": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "type_comment": {
          "type": "string"
        },
        "type_id": {
          "type": "integer",
          "format": "int64"
        },
        "type_name": {
          "type": "string"
        }
      }
    },
    "CardAnamnesisIllnesPartDto": {
      "type": "object",
      "properties": {
        "illnes_anamnesis": {
          "type": "string"
        },
        "past_illneses": {
          "type": "string"
        }
      }
    },
    "CardDeclarantPartDto": {
      "type": "object",
      "properties": {
        "declarant_name": {
          "type": "string"
        },
        "declarant_phone": {
          "type": "string"
        },
        "declarant_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "declarant_type_name": {
          "type": "string"
        }
      }
    },
    "CardAddressHouseDto": {
      "type": "object",
      "properties": {
        "building": {
          "type": "string"
        },
        "fias_id": {
          "type": "integer",
          "format": "int64"
        },
        "full_name": {
          "type": "string"
        },
        "house": {
          "type": "string"
        },
        "structure": {
          "type": "string"
        }
      }
    },
    "PerformerBrigScheduleUpdateDto": {
      "type": "object",
      "properties": {
        "performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "period_details": {
          "$ref": "#/definitions/PeriodDetails"
        }
      }
    },
    "ListDto«Performer»": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Performer"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CardBasicDatesPartDto": {
      "type": "object",
      "properties": {
        "arrive_time_exceed": {
          "type": "boolean"
        },
        "brigade_arrive_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "brigade_complete_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "brigade_departure_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "brigade_receiving_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "brigade_return_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "brigade_transport_begin_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "brigade_transport_end_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "call_create_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "call_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "card_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "full_time_interval": {
          "type": "string"
        },
        "receiving_time_exceed": {
          "type": "boolean"
        }
      }
    },
    "CallShortDto": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "call_id": {
          "type": "integer",
          "format": "int64"
        },
        "call_reason": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "declarant_name": {
          "type": "string"
        },
        "declarant_phone": {
          "type": "string"
        },
        "is_unfounded": {
          "type": "boolean"
        },
        "number": {
          "type": "string"
        },
        "patient_age": {
          "type": "string"
        },
        "patient_firstname": {
          "type": "string"
        },
        "patient_patronymic": {
          "type": "string"
        },
        "patient_second_name": {
          "type": "string"
        },
        "patients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "similars": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        },
        "subdivision_id": {
          "type": "integer",
          "format": "int64"
        },
        "subdivision_name": {
          "type": "string"
        }
      }
    },
    "CardObjectiveComplicationsPartDto": {
      "type": "object",
      "properties": {
        "complications_id": {
          "type": "integer",
          "format": "int64"
        },
        "complications_name": {
          "type": "string"
        },
        "complications_text": {
          "type": "string"
        }
      }
    },
    "MobileMessage": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "guid": {
          "type": "string"
        },
        "on_off": {
          "type": "boolean"
        }
      }
    },
    "BagItemDto": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "bag_id": {
          "type": "integer",
          "format": "int64"
        },
        "bag_nomenclature_id": {
          "type": "integer",
          "format": "int64"
        },
        "bag_series_number": {
          "type": "integer",
          "format": "int64"
        },
        "company": {
          "type": "string"
        },
        "expiry_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "full_name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "is_reusable": {
          "type": "boolean"
        },
        "matrix_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "nomenclature_id": {
          "type": "integer",
          "format": "int64"
        },
        "series_number": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CardObjectiveAlcoPartDto": {
      "type": "object",
      "properties": {
        "alco_breath": {
          "type": "boolean"
        },
        "alco_emotion_lability": {
          "type": "boolean"
        },
        "alco_inadequate": {
          "type": "boolean"
        },
        "alco_romberg_pose": {
          "type": "boolean"
        },
        "alco_shaky_walk": {
          "type": "boolean"
        },
        "alco_speach_behavior": {
          "type": "boolean"
        }
      }
    },
    "ListDto«LogDto»": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogDto"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GroupBagItemDto": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "bag_id": {
          "type": "integer",
          "format": "int64"
        },
        "group_id": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BagItemDto"
          }
        },
        "name": {
          "type": "string"
        },
        "nomenclature_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CardGridDto": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "brigade_arrive_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "brigade_departure_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "brigade_help_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "brigade_id": {
          "type": "integer",
          "format": "int64"
        },
        "brigade_name": {
          "type": "string"
        },
        "brigade_receiving_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "brigade_return_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "call_id": {
          "type": "integer",
          "format": "int64"
        },
        "card_id": {
          "type": "integer",
          "format": "int64"
        },
        "card_status": {
          "type": "integer",
          "format": "int32"
        },
        "card_status_name": {
          "type": "string"
        },
        "date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "declarant_name": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "deleted_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "deleted_message": {
          "type": "string"
        },
        "deleted_performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "deleted_performer_name": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "district_name": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "main_diagnosis_id": {
          "type": "integer",
          "format": "int64"
        },
        "main_diagnosis_name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "patient": {
          "type": "string"
        },
        "performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_name": {
          "type": "string"
        },
        "reason_id": {
          "type": "integer",
          "format": "int64"
        },
        "reason_name": {
          "type": "string"
        },
        "result_id": {
          "type": "integer",
          "format": "int64"
        },
        "result_name": {
          "type": "string"
        },
        "subdivision_id": {
          "type": "integer",
          "format": "int64"
        },
        "subdivision_name": {
          "type": "string"
        }
      }
    },
    "CardObjectiveLymphPartDto": {
      "type": "object",
      "properties": {
        "lymph_nodes_normal_large": {
          "type": "integer",
          "format": "int32"
        },
        "lymph_nodes_normal_large_name": {
          "type": "string"
        },
        "lymph_nodes_painful_unpainful": {
          "type": "integer",
          "format": "int32"
        },
        "lymph_nodes_painful_unpainful_name": {
          "type": "string"
        },
        "lymph_nodes_text": {
          "type": "string"
        }
      }
    },
    "CardAnamnesisComplaintsPartDto": {
      "type": "object",
      "properties": {
        "complaints_anamnesis": {
          "type": "string"
        }
      }
    },
    "MessageEventDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "date_filled": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "message_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_name": {
          "type": "string"
        },
        "receiving_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "receiving_type_name": {
          "type": "string"
        },
        "transmitted": {
          "type": "boolean"
        }
      }
    },
    "CardResultCommentsDto": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "string"
        }
      }
    },
    "BrigadeScheduleCreateDto": {
      "type": "object",
      "properties": {
        "cars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransportBrigScheduleCreateDto"
          }
        },
        "performers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerformerBrigScheduleCreateDto"
          }
        },
        "period_details": {
          "$ref": "#/definitions/PeriodDetails"
        }
      }
    },
    "CardObjectiveExcretaUrinePartDto": {
      "type": "object",
      "properties": {
        "excreta": {
          "type": "integer",
          "format": "int32"
        },
        "excreta_name": {
          "type": "string"
        },
        "excreta_text": {
          "type": "string"
        },
        "urine_text": {
          "type": "string"
        }
      }
    },
    "CardResultDto": {
      "type": "object",
      "properties": {
        "active_visit": {
          "$ref": "#/definitions/CardResultActiveVisitDto"
        },
        "assistance_result": {
          "$ref": "#/definitions/CardResultAssistanceResultDto"
        },
        "comments": {
          "type": "string"
        },
        "death": {
          "$ref": "#/definitions/CardResultDeathDto"
        },
        "diagnosis": {
          "$ref": "#/definitions/CardResultDiagnosisDto"
        },
        "ekg": {
          "$ref": "#/definitions/CardResultEkg"
        },
        "ekg_after": {
          "$ref": "#/definitions/CardResultEkg"
        },
        "header": {
          "$ref": "#/definitions/CardResultHeaderDto"
        },
        "illegal_actions": {
          "$ref": "#/definitions/CardResultIllegalActionsDto"
        },
        "local_efficiency_assistance": {
          "$ref": "#/definitions/CardResultEfficiencyAssistance"
        },
        "local_therapies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TherapyDto"
          }
        },
        "materials": {
          "$ref": "#/definitions/CardResultMaterialsDto"
        },
        "transfer_patient": {
          "$ref": "#/definitions/CardResultTransferPatientDto"
        },
        "transport_efficiency_assistance": {
          "$ref": "#/definitions/CardResultEfficiencyAssistance"
        },
        "transport_therapies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TherapyDto"
          }
        },
        "transporting": {
          "$ref": "#/definitions/CardResultTransportingDto"
        },
        "type": {
          "$ref": "#/definitions/CardResultTypeDto"
        }
      }
    },
    "Era": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PharmacyGroupReferenceDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "group_id": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "reference_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CardShiftSeniorDoctorPartDto": {
      "type": "object",
      "properties": {
        "shift_senior_doctor_checked": {
          "type": "boolean"
        },
        "shift_senior_doctor_comment": {
          "type": "string"
        },
        "shift_senior_doctor_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "shift_senior_doctor_id": {
          "type": "integer",
          "format": "int64"
        },
        "shift_senior_doctor_name": {
          "type": "string"
        }
      }
    },
    "CardObjectiveGlasgowPartDto": {
      "type": "object",
      "properties": {
        "eye": {
          "type": "integer",
          "format": "int32"
        },
        "motor": {
          "type": "integer",
          "format": "int32"
        },
        "verbal": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProductMove": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number"
        },
        "count_consumption": {
          "type": "number"
        },
        "count_receiving": {
          "type": "number"
        },
        "date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "description": {
          "type": "string"
        },
        "document_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CardBrigadeDoctorPartDto": {
      "type": "object",
      "properties": {
        "brigade_doctor_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "brigade_doctor_id": {
          "type": "integer",
          "format": "int64"
        },
        "brigade_doctor_name": {
          "type": "string"
        },
        "brigade_doctor_signed": {
          "type": "boolean"
        }
      }
    },
    "CardObjectivePartDtoFLAT": {
      "type": "object",
      "properties": {
        "ad": {
          "type": "string"
        },
        "addition_objective": {
          "type": "string"
        },
        "admax": {
          "type": "string"
        },
        "adn": {
          "type": "string"
        },
        "alco_breath": {
          "type": "boolean"
        },
        "alco_emotion_lability": {
          "type": "boolean"
        },
        "alco_inadequate": {
          "type": "boolean"
        },
        "alco_romberg_pose": {
          "type": "boolean"
        },
        "alco_shaky_walk": {
          "type": "boolean"
        },
        "alco_speach_behavior": {
          "type": "boolean"
        },
        "almonds_normal_large": {
          "type": "integer",
          "format": "int32"
        },
        "almonds_plaque": {
          "type": "boolean"
        },
        "behaviour_id": {
          "type": "integer",
          "format": "int64"
        },
        "behaviour_name": {
          "type": "string"
        },
        "bodytemp": {
          "type": "string"
        },
        "breath_absent": {
          "type": "boolean"
        },
        "breath_bronch": {
          "type": "boolean"
        },
        "breath_evenly": {
          "type": "boolean"
        },
        "breath_hard": {
          "type": "boolean"
        },
        "breath_puer": {
          "type": "boolean"
        },
        "breath_text": {
          "type": "string"
        },
        "breath_vesicul": {
          "type": "boolean"
        },
        "breath_weak": {
          "type": "boolean"
        },
        "card_delivery_id": {
          "type": "integer",
          "format": "int64"
        },
        "chd": {
          "type": "string"
        },
        "chss": {
          "type": "string"
        },
        "conscious_id": {
          "type": "integer",
          "format": "int64"
        },
        "conscious_name": {
          "type": "string"
        },
        "diuresis_disuria": {
          "type": "boolean"
        },
        "diuresis_hematuria": {
          "type": "boolean"
        },
        "diuresis_n": {
          "type": "boolean"
        },
        "diuresis_oliguria": {
          "type": "boolean"
        },
        "dyspeptic_diarrhea": {
          "type": "boolean"
        },
        "dyspeptic_nausea": {
          "type": "boolean"
        },
        "dyspeptic_retch": {
          "type": "boolean"
        },
        "dyspeptics_no": {
          "type": "boolean"
        },
        "dyspnea_id": {
          "type": "integer",
          "format": "int64"
        },
        "dyspnea_name": {
          "type": "string"
        },
        "excreta": {
          "type": "integer",
          "format": "int32"
        },
        "excreta_name": {
          "type": "string"
        },
        "excreta_text": {
          "type": "string"
        },
        "eye": {
          "type": "integer",
          "format": "int32"
        },
        "general_state_id": {
          "type": "integer",
          "format": "int64"
        },
        "general_state_name": {
          "type": "string"
        },
        "glucometry": {
          "type": "string"
        },
        "heart_noise_id": {
          "type": "integer",
          "format": "int64"
        },
        "heart_noise_name": {
          "type": "string"
        },
        "heart_pulse_id": {
          "type": "integer",
          "format": "int64"
        },
        "heart_pulse_name": {
          "type": "string"
        },
        "heart_rate_id": {
          "type": "integer",
          "format": "int64"
        },
        "heart_rate_name": {
          "type": "string"
        },
        "heart_tone_id": {
          "type": "integer",
          "format": "int64"
        },
        "heart_tone_name": {
          "type": "string"
        },
        "heart_tone_noise": {
          "type": "boolean"
        },
        "is_created": {
          "type": "boolean"
        },
        "lion_tapping_left": {
          "type": "boolean"
        },
        "lion_tapping_right": {
          "type": "boolean"
        },
        "liver_normal_large": {
          "type": "integer",
          "format": "int32"
        },
        "liver_ortner": {
          "type": "boolean"
        },
        "liver_size_text": {
          "type": "string"
        },
        "lungs_wheezing_id": {
          "type": "integer",
          "format": "int64"
        },
        "lungs_wheezing_text": {
          "type": "string"
        },
        "lymph_nodes_normal_large": {
          "type": "integer",
          "format": "int32"
        },
        "lymph_nodes_painful_unpainful": {
          "type": "integer",
          "format": "int32"
        },
        "lymph_nodes_text": {
          "type": "string"
        },
        "meningeal_reflexes": {
          "type": "boolean"
        },
        "motor": {
          "type": "integer",
          "format": "int32"
        },
        "multiple_zeva_clean_hyper": {
          "type": "integer",
          "format": "int32"
        },
        "pathological_reflexes": {
          "type": "boolean"
        },
        "penalties_anisocoria": {
          "type": "integer",
          "format": "int32"
        },
        "penalties_anisocoria_name": {
          "type": "string"
        },
        "penalties_d_s_id": {
          "type": "integer",
          "format": "int64"
        },
        "penalties_d_s_name": {
          "type": "string"
        },
        "penalties_id": {
          "type": "integer",
          "format": "int64"
        },
        "penalties_light": {
          "type": "integer",
          "format": "int32"
        },
        "penalties_light_name": {
          "type": "string"
        },
        "penalties_name": {
          "type": "string"
        },
        "penalties_nystagmus": {
          "type": "integer",
          "format": "int32"
        },
        "penalties_nystagmus_name": {
          "type": "string"
        },
        "perc_lungs_sound_id": {
          "type": "integer",
          "format": "int64"
        },
        "perc_lungs_sound_name": {
          "type": "string"
        },
        "perc_lungs_sound_text": {
          "type": "string"
        },
        "post_therapy_hemodynamics": {
          "type": "string"
        },
        "ps": {
          "type": "string"
        },
        "pulse_oximetry": {
          "type": "string"
        },
        "reflexes_d_s_id": {
          "type": "integer",
          "format": "int64"
        },
        "reflexes_d_s_name": {
          "type": "string"
        },
        "reflexes_name": {
          "type": "string"
        },
        "skin_integ_acrosian": {
          "type": "boolean"
        },
        "skin_integ_cyanotic": {
          "type": "boolean"
        },
        "skin_integ_dry": {
          "type": "boolean"
        },
        "skin_integ_earthy": {
          "type": "boolean"
        },
        "skin_integ_hyperemetic": {
          "type": "boolean"
        },
        "skin_integ_icteric": {
          "type": "boolean"
        },
        "skin_integ_marbleness": {
          "type": "boolean"
        },
        "skin_integ_normal": {
          "type": "boolean"
        },
        "skin_integ_pale": {
          "type": "boolean"
        },
        "skin_integ_profuse": {
          "type": "boolean"
        },
        "skin_integ_rashes": {
          "type": "boolean"
        },
        "stomach_ascites": {
          "type": "boolean"
        },
        "stomach_breathing_involved": {
          "type": "integer",
          "format": "int32"
        },
        "stomach_breathing_involved_name": {
          "type": "string"
        },
        "stomach_disklike": {
          "type": "boolean"
        },
        "stomach_hard": {
          "type": "boolean"
        },
        "stomach_infliat": {
          "type": "boolean"
        },
        "stomach_normal": {
          "type": "boolean"
        },
        "stomach_painful": {
          "type": "boolean"
        },
        "stomach_peritonit": {
          "type": "integer",
          "format": "int32"
        },
        "stomach_peritonit_name": {
          "type": "string"
        },
        "stomach_soft": {
          "type": "boolean"
        },
        "stomach_text": {
          "type": "string"
        },
        "stomach_unpainful": {
          "type": "boolean"
        },
        "tendon_reflexes_id": {
          "type": "integer",
          "format": "int64"
        },
        "tendon_reflexes_name": {
          "type": "string"
        },
        "titles": {
          "type": "boolean"
        },
        "titles_text": {
          "type": "string"
        },
        "tongue_clean_furred": {
          "type": "integer",
          "format": "int32"
        },
        "tongue_clean_furred_name": {
          "type": "string"
        },
        "tongue_weat_dry": {
          "type": "integer",
          "format": "int32"
        },
        "tongue_weat_dry_name": {
          "type": "string"
        },
        "urine_text": {
          "type": "string"
        },
        "verbal": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "UploadFileForm": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "file": {
          "type": "file"
        },
        "format": {
          "type": "integer",
          "format": "int32"
        },
        "group_code": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "nn": {
          "type": "integer",
          "format": "int32"
        },
        "script": {
          "type": "string"
        },
        "sub_id": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CardObjectiveReflexesDto": {
      "type": "object",
      "properties": {
        "meningeal_reflexes": {
          "type": "boolean"
        },
        "pathological_reflexes": {
          "type": "boolean"
        },
        "reflexes_d_s_id": {
          "type": "integer",
          "format": "int64"
        },
        "reflexes_d_s_name": {
          "type": "string"
        },
        "reflexes_name": {
          "type": "string"
        },
        "tendon_reflexes_id": {
          "type": "integer",
          "format": "int64"
        },
        "tendon_reflexes_name": {
          "type": "string"
        }
      }
    },
    "BrigadeType": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "editable": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "StackTraceElement": {
      "type": "object",
      "properties": {
        "className": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32"
        },
        "methodName": {
          "type": "string"
        },
        "nativeMethod": {
          "type": "boolean"
        }
      }
    },
    "URI": {
      "type": "object",
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "authority": {
          "type": "string"
        },
        "fragment": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "opaque": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "query": {
          "type": "string"
        },
        "rawAuthority": {
          "type": "string"
        },
        "rawFragment": {
          "type": "string"
        },
        "rawPath": {
          "type": "string"
        },
        "rawQuery": {
          "type": "string"
        },
        "rawSchemeSpecificPart": {
          "type": "string"
        },
        "rawUserInfo": {
          "type": "string"
        },
        "scheme": {
          "type": "string"
        },
        "schemeSpecificPart": {
          "type": "string"
        },
        "userInfo": {
          "type": "string"
        }
      }
    },
    "URL": {
      "type": "object",
      "properties": {
        "authority": {
          "type": "string"
        },
        "content": {
          "type": "object"
        },
        "defaultPort": {
          "type": "integer",
          "format": "int32"
        },
        "file": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "userInfo": {
          "type": "string"
        }
      }
    },
    "Chat": {
      "type": "object",
      "properties": {
        "archive": {
          "type": "boolean"
        },
        "chatMessage": {
          "$ref": "#/definitions/ChatMessage"
        },
        "creator": {
          "$ref": "#/definitions/ChatUser"
        },
        "date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "online": {
          "type": "boolean"
        },
        "position": {
          "type": "string"
        },
        "subdivision_name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2"
          ]
        },
        "unread_count": {
          "type": "integer",
          "format": "int32"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChatUser"
          }
        }
      }
    },
    "CardResultDeathDto": {
      "type": "object",
      "properties": {
        "time": {
          "$ref": "#/definitions/LocalDateTime"
        }
      }
    },
    "ReferenceDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DocumentItemDto": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "code": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "document_id": {
          "type": "integer",
          "format": "int64"
        },
        "document_name": {
          "type": "string"
        },
        "drug_id": {
          "type": "integer",
          "format": "int64"
        },
        "expiry_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "full_name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "inner_amount": {
          "type": "integer",
          "format": "int64"
        },
        "is_reusable": {
          "type": "boolean"
        },
        "matrix_id": {
          "type": "integer",
          "format": "int64"
        },
        "minimum": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "nomenclature_id": {
          "type": "integer",
          "format": "int64"
        },
        "owner_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "series_number": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Table": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        },
        "text": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ]
        }
      }
    },
    "IsoChronology": {
      "type": "object",
      "properties": {
        "calendarType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "CallDto": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/CallFiasAddressDto"
        },
        "declarant": {
          "$ref": "#/definitions/CallDeclarantPartDto"
        },
        "general": {
          "$ref": "#/definitions/CallGeneralPartDto"
        },
        "patients": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallPatientPartDto"
          }
        },
        "similars": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CardResultTransportingDto": {
      "type": "object",
      "properties": {
        "hosp_complications": {
          "type": "boolean"
        },
        "hosp_complications_text": {
          "type": "string"
        },
        "hosp_to_id": {
          "type": "integer",
          "format": "int64"
        },
        "hosp_to_name": {
          "type": "string"
        },
        "hosp_transportation_id": {
          "type": "integer",
          "format": "int64"
        },
        "hosp_transportation_name": {
          "type": "string"
        },
        "transporting_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "transporting_type_code": {
          "type": "string"
        },
        "transporting_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "transporting_type_name": {
          "type": "string"
        }
      }
    },
    "Geometry": {
      "type": "object",
      "properties": {
        "dimension": {
          "type": "integer",
          "format": "int32"
        },
        "firstPoint": {
          "$ref": "#/definitions/Point"
        },
        "haveMeasure": {
          "type": "boolean"
        },
        "lastPoint": {
          "$ref": "#/definitions/Point"
        },
        "measured": {
          "type": "boolean"
        },
        "srid": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "typeString": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ReferenceTypeDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "system_value": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "MobileCardRequest": {
      "type": "object",
      "properties": {
        "call_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MobileCall"
          }
        },
        "guid": {
          "type": "string"
        }
      }
    },
    "CardObjectiveTonsilsPartDto": {
      "type": "object",
      "properties": {
        "almonds_normal_large": {
          "type": "integer",
          "format": "int32"
        },
        "almonds_normal_large_name": {
          "type": "string"
        },
        "almonds_plaque": {
          "type": "boolean"
        }
      }
    },
    "CardAnamnesisHemodynamicsPartDto": {
      "type": "object",
      "properties": {
        "post_therapy_hemodynamics": {
          "type": "string"
        }
      }
    },
    "PharmacyDocumentDto": {
      "type": "object",
      "properties": {
        "card_id": {
          "type": "integer",
          "format": "int64"
        },
        "card_number": {
          "type": "string"
        },
        "counterparty_id": {
          "type": "integer",
          "format": "int64"
        },
        "counterparty_name": {
          "type": "string"
        },
        "date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "full_name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "is_has_changes": {
          "type": "boolean"
        },
        "is_processed": {
          "type": "boolean"
        },
        "is_system": {
          "type": "boolean"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentItemDto"
          }
        },
        "number": {
          "type": "string"
        },
        "owner_id": {
          "type": "integer",
          "format": "int64"
        },
        "owner_name": {
          "type": "string"
        },
        "process_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "reason_id": {
          "type": "integer",
          "format": "int64"
        },
        "reason_text": {
          "type": "string"
        },
        "reason_type": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "type_text": {
          "type": "string"
        }
      }
    },
    "BrigadeTypeDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RoutingDto": {
      "type": "object",
      "properties": {
        "hours": {
          "type": "string"
        },
        "km": {
          "type": "string"
        },
        "points": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoutingPointDto"
          }
        }
      }
    },
    "ScheduleType": {
      "type": "object",
      "properties": {
        "days_off": {
          "type": "integer",
          "format": "int32"
        },
        "days_working": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "is_deleted": {
          "type": "boolean"
        },
        "is_editable": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "subdivision_id": {
          "type": "integer",
          "format": "int64"
        },
        "time_from": {
          "type": "string",
          "example": "HH:mm"
        },
        "time_working": {
          "type": "string",
          "example": "HH:mm"
        }
      }
    },
    "CardObjectiveBreathPartDto": {
      "type": "object",
      "properties": {
        "breath_absent": {
          "type": "boolean"
        },
        "breath_bronch": {
          "type": "boolean"
        },
        "breath_evenly": {
          "type": "boolean"
        },
        "breath_hard": {
          "type": "boolean"
        },
        "breath_puer": {
          "type": "boolean"
        },
        "breath_text": {
          "type": "string"
        },
        "breath_vesicul": {
          "type": "boolean"
        },
        "breath_weak": {
          "type": "boolean"
        },
        "dyspnea_id": {
          "type": "integer",
          "format": "int64"
        },
        "dyspnea_name": {
          "type": "string"
        }
      }
    },
    "ListDto«PerformerDto»": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerformerDto"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Unit": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TransportBrigScheduleCreateDto": {
      "type": "object",
      "properties": {
        "period_details": {
          "$ref": "#/definitions/PeriodDetails"
        },
        "transport_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CallDtoFLAT": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/CallFiasAddressDto"
        },
        "addressee": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "audio_file_name": {
          "type": "string"
        },
        "call_id": {
          "type": "integer",
          "format": "int64"
        },
        "call_number": {
          "type": "string"
        },
        "call_priority": {
          "type": "integer",
          "format": "int32"
        },
        "call_priority_name": {
          "type": "string"
        },
        "call_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "call_type_name": {
          "type": "string"
        },
        "date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "declarant_name": {
          "type": "string"
        },
        "declarant_phone": {
          "type": "string"
        },
        "declarant_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "declarant_type_name": {
          "type": "string"
        },
        "is_unfounded": {
          "type": "boolean"
        },
        "patient": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallPatientPartDto"
          }
        },
        "performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_name": {
          "type": "string"
        },
        "primary_call_id": {
          "type": "integer",
          "format": "int64"
        },
        "primary_call_number": {
          "type": "string"
        },
        "reason_comment": {
          "type": "string"
        },
        "reason_extra": {
          "type": "boolean"
        },
        "reason_id": {
          "type": "integer",
          "format": "int64"
        },
        "reason_name": {
          "type": "string"
        },
        "similars": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subdivision_id": {
          "type": "integer",
          "format": "int64"
        },
        "subdivision_name": {
          "type": "string"
        }
      }
    },
    "PerformerBrigScheduleAvailableDto": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "patronymic": {
          "type": "string"
        },
        "performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "periods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Period"
          }
        },
        "second_name": {
          "type": "string"
        },
        "type_id": {
          "type": "integer",
          "format": "int64"
        },
        "type_name": {
          "type": "string"
        }
      }
    },
    "CallBrigadePartDto": {
      "type": "object",
      "properties": {
        "brigade_id": {
          "type": "integer",
          "format": "int64"
        },
        "brigade_name": {
          "type": "string"
        },
        "brigade_schedule_id": {
          "type": "integer",
          "format": "int64"
        },
        "brigade_subdivision_id": {
          "type": "integer",
          "format": "int64"
        },
        "brigade_subdivision_name": {
          "type": "string"
        },
        "brigade_subdivision_short_name": {
          "type": "string"
        },
        "brigade_type_code": {
          "type": "string"
        },
        "brigade_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "brigade_type_name": {
          "type": "string"
        },
        "call_id": {
          "type": "integer",
          "format": "int64"
        },
        "call_number": {
          "type": "string"
        },
        "call_reason_id": {
          "type": "integer",
          "format": "int64"
        },
        "call_reason_name": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageEventDto"
          }
        },
        "performers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerformerShortDto"
          }
        },
        "receiving_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "receiving_type_name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "state_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "transport_brand": {
          "type": "string"
        },
        "transport_class_name": {
          "type": "string"
        },
        "transport_id": {
          "type": "integer",
          "format": "int64"
        },
        "transport_statemark": {
          "type": "string"
        },
        "transport_type_name": {
          "type": "string"
        }
      }
    },
    "AddressObject": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "editable": {
          "type": "boolean"
        },
        "full_name": {
          "type": "string"
        },
        "gc_key": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "FiasAddressHouseDto": {
      "type": "object",
      "properties": {
        "building": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "structure": {
          "type": "string"
        }
      }
    },
    "PharmacyOwner": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "editable": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "isDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "systemValue": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "CardPatientPartDto": {
      "type": "object",
      "properties": {
        "alien_birthplace": {
          "type": "string"
        },
        "birthday": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "document_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "document_name": {
          "type": "string"
        },
        "document_number": {
          "type": "string"
        },
        "document_serial": {
          "type": "string"
        },
        "insurance_DMS_SMO": {
          "type": "string"
        },
        "insurance_OMS": {
          "type": "string"
        },
        "insurance_SMO": {
          "type": "string"
        },
        "is_dead": {
          "type": "boolean"
        },
        "job_place": {
          "type": "string"
        },
        "job_position": {
          "type": "string"
        },
        "patient_age_days": {
          "type": "integer",
          "format": "int32"
        },
        "patient_age_months": {
          "type": "integer",
          "format": "int32"
        },
        "patient_age_years": {
          "type": "integer",
          "format": "int32"
        },
        "patient_firstname": {
          "type": "string"
        },
        "patient_id": {
          "type": "integer",
          "format": "int64"
        },
        "patient_patronymic": {
          "type": "string"
        },
        "patient_secondname": {
          "type": "string"
        },
        "patient_sex": {
          "type": "integer",
          "format": "int32"
        },
        "patient_sex_name": {
          "type": "string"
        },
        "patient_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "patient_type_name": {
          "type": "string"
        },
        "registry_building": {
          "type": "string"
        },
        "registry_city": {
          "type": "string"
        },
        "registry_country": {
          "type": "string"
        },
        "registry_district": {
          "type": "string"
        },
        "registry_flat": {
          "type": "string"
        },
        "registry_house": {
          "type": "string"
        },
        "registry_region": {
          "type": "string"
        },
        "registry_street": {
          "type": "string"
        },
        "social_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "social_type_name": {
          "type": "string"
        },
        "source_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "source_type_name": {
          "type": "string"
        }
      }
    },
    "TherapyTemplateDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "CardObjectivePupilsDto": {
      "type": "object",
      "properties": {
        "penalties_anisocoria": {
          "type": "integer",
          "format": "int32"
        },
        "penalties_anisocoria_name": {
          "type": "string"
        },
        "penalties_d_s_id": {
          "type": "integer",
          "format": "int64"
        },
        "penalties_d_s_name": {
          "type": "string"
        },
        "penalties_id": {
          "type": "integer",
          "format": "int64"
        },
        "penalties_light": {
          "type": "integer",
          "format": "int32"
        },
        "penalties_light_name": {
          "type": "string"
        },
        "penalties_name": {
          "type": "string"
        },
        "penalties_nystagmus": {
          "type": "integer",
          "format": "int32"
        },
        "penalties_nystagmus_name": {
          "type": "string"
        }
      }
    },
    "Resource": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "file": {
          "type": "file"
        },
        "filename": {
          "type": "string"
        },
        "inputStream": {
          "$ref": "#/definitions/InputStream"
        },
        "open": {
          "type": "boolean"
        },
        "readable": {
          "type": "boolean"
        },
        "uri": {
          "$ref": "#/definitions/URI"
        },
        "url": {
          "$ref": "#/definitions/URL"
        }
      }
    },
    "Period": {
      "type": "object",
      "properties": {
        "date_from": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "date_to": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PerformerScheduleDto2": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "period_details": {
          "$ref": "#/definitions/PeriodDetails"
        },
        "period_id": {
          "type": "integer",
          "format": "int64"
        },
        "period_type": {
          "$ref": "#/definitions/ScheduleType"
        },
        "scheduller_info": {
          "$ref": "#/definitions/PerformerScheduller"
        }
      }
    },
    "CardResultAssistanceResultDto": {
      "type": "object",
      "properties": {
        "assistance_result_id": {
          "type": "integer",
          "format": "int64"
        },
        "card_result_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CallFiasAddressDto": {
      "type": "object",
      "properties": {
        "call_place_id": {
          "type": "integer",
          "format": "int64"
        },
        "call_place_name": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/FiasAddressObjectDto"
        },
        "district": {
          "$ref": "#/definitions/FiasAddressObjectDto"
        },
        "entrance": {
          "type": "string"
        },
        "entrance_code": {
          "type": "string"
        },
        "flat": {
          "type": "string"
        },
        "floor": {
          "type": "string"
        },
        "fullname": {
          "type": "string"
        },
        "geometry": {
          "type": "string"
        },
        "house": {
          "$ref": "#/definitions/FiasAddressHouseDto"
        },
        "region": {
          "$ref": "#/definitions/FiasAddressObjectDto"
        },
        "room": {
          "type": "string"
        },
        "settlement": {
          "$ref": "#/definitions/FiasAddressObjectDto"
        },
        "street": {
          "$ref": "#/definitions/FiasAddressObjectDto"
        }
      }
    },
    "CardResultTypeDto": {
      "type": "object",
      "properties": {
        "system_value": {
          "type": "integer",
          "format": "int32"
        },
        "type_code": {
          "type": "string"
        },
        "type_comment": {
          "type": "string"
        },
        "type_id": {
          "type": "integer",
          "format": "int64"
        },
        "type_name": {
          "type": "string"
        }
      }
    },
    "NomenclatureItem": {
      "type": "object",
      "properties": {
        "expiryDate": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "owner": {
          "$ref": "#/definitions/PharmacyOwner"
        },
        "referenceItem": {
          "$ref": "#/definitions/PharmacyReferenceItem"
        },
        "reusable": {
          "type": "boolean"
        },
        "seriesNumber": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2"
          ]
        }
      }
    },
    "MkbDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "info": {
          "type": "string"
        },
        "leaf": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "parent_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "FiasAddressDto": {
      "type": "object",
      "properties": {
        "country": {
          "$ref": "#/definitions/FiasAddressObjectDto"
        },
        "district": {
          "$ref": "#/definitions/FiasAddressObjectDto"
        },
        "entrance": {
          "type": "string"
        },
        "entrance_code": {
          "type": "string"
        },
        "flat": {
          "type": "string"
        },
        "floor": {
          "type": "string"
        },
        "fullname": {
          "type": "string"
        },
        "geometry": {
          "type": "string"
        },
        "house": {
          "$ref": "#/definitions/FiasAddressHouseDto"
        },
        "region": {
          "$ref": "#/definitions/FiasAddressObjectDto"
        },
        "room": {
          "type": "string"
        },
        "settlement": {
          "$ref": "#/definitions/FiasAddressObjectDto"
        },
        "street": {
          "$ref": "#/definitions/FiasAddressObjectDto"
        }
      }
    },
    "DrugDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "container": {
          "type": "string"
        },
        "container_item": {
          "type": "string"
        },
        "container_item_count": {
          "type": "integer",
          "format": "int32"
        },
        "country": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Performer": {
      "type": "object",
      "properties": {
        "adminConfig": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "editable": {
          "type": "boolean"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "login": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "online": {
          "type": "boolean"
        },
        "password": {
          "type": "string"
        },
        "patronymic": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "secondName": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        },
        "skills": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Skill"
          }
        },
        "subdivisionId": {
          "type": "integer",
          "format": "int64"
        },
        "subdivisionName": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/PerformerType"
        },
        "typeId": {
          "type": "integer",
          "format": "int64"
        },
        "typeName": {
          "type": "string"
        },
        "userConfig": {
          "type": "string"
        },
        "workplaceSubdivisionId": {
          "type": "integer",
          "format": "int64"
        },
        "workplaceSubdivisionName": {
          "type": "string"
        }
      }
    },
    "PharmacyReferenceItem": {
      "type": "object",
      "properties": {
        "barcode": {
          "type": "integer",
          "format": "int64"
        },
        "code": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "container": {
          "type": "string"
        },
        "containerItem": {
          "type": "string"
        },
        "containerItemCount": {
          "type": "integer",
          "format": "int32"
        },
        "country": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "legalEntity": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "normativeDocuments": {
          "type": "string"
        },
        "productInfo": {
          "type": "string"
        },
        "regCertCancellationDate": {
          "$ref": "#/definitions/LocalDate"
        },
        "regCertExpiryDate": {
          "$ref": "#/definitions/LocalDate"
        },
        "regCertNumber": {
          "type": "string"
        },
        "regDate": {
          "$ref": "#/definitions/LocalDate"
        },
        "type": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2"
          ]
        }
      }
    },
    "BrigadeFindListDto": {
      "type": "object",
      "properties": {
        "br_type_code": {
          "type": "string"
        },
        "br_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "br_type_name": {
          "type": "string"
        },
        "brigade_schedule_id": {
          "type": "integer",
          "format": "int64"
        },
        "brigade_status_id": {
          "type": "integer",
          "format": "int64"
        },
        "brigade_status_name": {
          "type": "string"
        },
        "call_id": {
          "type": "integer",
          "format": "int64"
        },
        "call_latitude": {
          "type": "number",
          "format": "double"
        },
        "call_longitude": {
          "type": "number",
          "format": "double"
        },
        "call_number": {
          "type": "string"
        },
        "call_reason_id": {
          "type": "integer",
          "format": "int64"
        },
        "call_reason_name": {
          "type": "string"
        },
        "can_use": {
          "type": "boolean"
        },
        "distanse": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageEventDto"
          }
        },
        "name": {
          "type": "string"
        },
        "performers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerformerBrigScheduleDto"
          }
        },
        "prior": {
          "type": "boolean"
        },
        "receiving_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "receiving_type_name": {
          "type": "string"
        },
        "recommended": {
          "type": "boolean"
        },
        "sub_id": {
          "type": "integer",
          "format": "int64"
        },
        "sub_short_name": {
          "type": "string"
        },
        "time": {
          "type": "string"
        },
        "transport": {
          "$ref": "#/definitions/TransportBrigScheduleDto"
        }
      }
    },
    "Packaging": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "product_id": {
          "type": "integer",
          "format": "int64"
        },
        "unit_code": {
          "type": "string"
        },
        "unit_count": {
          "type": "number"
        }
      }
    },
    "Throwable": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "localizedMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "CardGeneralPartDto": {
      "type": "object",
      "properties": {
        "basic_dates": {
          "$ref": "#/definitions/CardBasicDatesPartDto"
        },
        "brigade_doctor": {
          "$ref": "#/definitions/CardBrigadeDoctorPartDto"
        },
        "call_id": {
          "type": "integer",
          "format": "int64"
        },
        "call_number": {
          "type": "string"
        },
        "call_priority": {
          "type": "integer",
          "format": "int32"
        },
        "call_priority_name": {
          "type": "string"
        },
        "call_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "call_type_name": {
          "type": "string"
        },
        "card_id": {
          "type": "integer",
          "format": "int64"
        },
        "card_status": {
          "type": "integer",
          "format": "int32"
        },
        "card_status_name": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "deleted_date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "deleted_message": {
          "type": "string"
        },
        "deleted_performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "deleted_performer_name": {
          "type": "string"
        },
        "dispatcher_accept_id": {
          "type": "integer",
          "format": "int64"
        },
        "dispatcher_accept_name": {
          "type": "string"
        },
        "dispatcher_received_id": {
          "type": "integer",
          "format": "int64"
        },
        "dispatcher_received_name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_name": {
          "type": "string"
        },
        "reason_comment": {
          "type": "string"
        },
        "reason_id": {
          "type": "integer",
          "format": "int64"
        },
        "reason_name": {
          "type": "string"
        },
        "receiving_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "receiving_type_name": {
          "type": "string"
        },
        "shift_senior_doctor": {
          "$ref": "#/definitions/CardShiftSeniorDoctorPartDto"
        },
        "subdivision_head_doctor": {
          "$ref": "#/definitions/CardSubdivisionHeadDoctorPartDto"
        },
        "subdivision_id": {
          "type": "integer",
          "format": "int64"
        },
        "subdivision_name": {
          "type": "string"
        }
      }
    },
    "File": {
      "type": "object",
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "absoluteFile": {
          "type": "file"
        },
        "absolutePath": {
          "type": "string"
        },
        "canonicalFile": {
          "type": "file"
        },
        "canonicalPath": {
          "type": "string"
        },
        "directory": {
          "type": "boolean"
        },
        "file": {
          "type": "boolean"
        },
        "freeSpace": {
          "type": "integer",
          "format": "int64"
        },
        "hidden": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "parentFile": {
          "type": "file"
        },
        "path": {
          "type": "string"
        },
        "totalSpace": {
          "type": "integer",
          "format": "int64"
        },
        "usableSpace": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CardAnamnesisEpidemicPartDto": {
      "type": "object",
      "properties": {
        "infect_contacts": {
          "type": "string"
        },
        "quarantine": {
          "type": "string"
        },
        "vaccination": {
          "type": "string"
        }
      }
    },
    "CallGridDto": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "brigades": {
          "type": "string"
        },
        "call_id": {
          "type": "integer",
          "format": "int64"
        },
        "call_status": {
          "type": "integer",
          "format": "int32"
        },
        "call_status_name": {
          "type": "string"
        },
        "date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "declarant_name": {
          "type": "string"
        },
        "declarant_phone": {
          "type": "string"
        },
        "district_name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "is_unfounded": {
          "type": "boolean"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "number": {
          "type": "string"
        },
        "patients": {
          "type": "string"
        },
        "performer_accept_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_accept_name": {
          "type": "string"
        },
        "performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_name": {
          "type": "string"
        },
        "performer_send_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_send_name": {
          "type": "string"
        },
        "reason_id": {
          "type": "integer",
          "format": "int64"
        },
        "reason_name": {
          "type": "string"
        },
        "subdivision_id": {
          "type": "integer",
          "format": "int64"
        },
        "subdivision_name": {
          "type": "string"
        },
        "subdivision_send_id": {
          "type": "integer",
          "format": "int64"
        },
        "subdivision_send_name": {
          "type": "string"
        }
      }
    },
    "InquirerDto": {
      "type": "object",
      "properties": {
        "answer_title": {
          "type": "string"
        },
        "brigade_types": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "extra": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "is_deleted": {
          "type": "boolean"
        },
        "is_editable": {
          "type": "boolean"
        },
        "parent_id": {
          "type": "integer",
          "format": "int64"
        },
        "query_title": {
          "type": "string"
        },
        "reason_title": {
          "type": "string"
        }
      }
    },
    "SubdivisionDto": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/FiasAddressDto"
        },
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "district_code": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "name": {
          "type": "string"
        },
        "par_code": {
          "type": "string"
        },
        "par_id": {
          "type": "integer",
          "format": "int64"
        },
        "par_name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "picture": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "type_code": {
          "type": "string"
        },
        "type_id": {
          "type": "integer",
          "format": "int64"
        },
        "type_name": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "zone": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          }
        }
      }
    },
    "TransportClassDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Config": {
      "type": "object",
      "properties": {
        "app_name": {
          "type": "string"
        },
        "app_version": {
          "type": "string"
        },
        "is_admin": {
          "type": "boolean"
        },
        "is_mb": {
          "type": "boolean"
        },
        "is_smp": {
          "type": "boolean"
        },
        "is_tcmk": {
          "type": "boolean"
        },
        "is_turn_on_routing": {
          "type": "boolean"
        },
        "is_user": {
          "type": "boolean"
        },
        "map_url": {
          "type": "string"
        },
        "performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_name": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sub_id": {
          "type": "integer",
          "format": "int64"
        },
        "sub_name": {
          "type": "string"
        }
      }
    },
    "ModelAndView": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "model": {
          "type": "object"
        },
        "modelMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "reference": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "100 CONTINUE",
            "101 SWITCHING_PROTOCOLS",
            "102 PROCESSING",
            "103 CHECKPOINT",
            "200 OK",
            "201 CREATED",
            "202 ACCEPTED",
            "203 NON_AUTHORITATIVE_INFORMATION",
            "204 NO_CONTENT",
            "205 RESET_CONTENT",
            "206 PARTIAL_CONTENT",
            "207 MULTI_STATUS",
            "208 ALREADY_REPORTED",
            "226 IM_USED",
            "300 MULTIPLE_CHOICES",
            "301 MOVED_PERMANENTLY",
            "302 FOUND",
            "302 MOVED_TEMPORARILY",
            "303 SEE_OTHER",
            "304 NOT_MODIFIED",
            "305 USE_PROXY",
            "307 TEMPORARY_REDIRECT",
            "308 PERMANENT_REDIRECT",
            "400 BAD_REQUEST",
            "401 UNAUTHORIZED",
            "402 PAYMENT_REQUIRED",
            "403 FORBIDDEN",
            "404 NOT_FOUND",
            "405 METHOD_NOT_ALLOWED",
            "406 NOT_ACCEPTABLE",
            "407 PROXY_AUTHENTICATION_REQUIRED",
            "408 REQUEST_TIMEOUT",
            "409 CONFLICT",
            "410 GONE",
            "411 LENGTH_REQUIRED",
            "412 PRECONDITION_FAILED",
            "413 PAYLOAD_TOO_LARGE",
            "413 REQUEST_ENTITY_TOO_LARGE",
            "414 URI_TOO_LONG",
            "414 REQUEST_URI_TOO_LONG",
            "415 UNSUPPORTED_MEDIA_TYPE",
            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
            "417 EXPECTATION_FAILED",
            "418 I_AM_A_TEAPOT",
            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
            "420 METHOD_FAILURE",
            "421 DESTINATION_LOCKED",
            "422 UNPROCESSABLE_ENTITY",
            "423 LOCKED",
            "424 FAILED_DEPENDENCY",
            "426 UPGRADE_REQUIRED",
            "428 PRECONDITION_REQUIRED",
            "429 TOO_MANY_REQUESTS",
            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
            "500 INTERNAL_SERVER_ERROR",
            "501 NOT_IMPLEMENTED",
            "502 BAD_GATEWAY",
            "503 SERVICE_UNAVAILABLE",
            "504 GATEWAY_TIMEOUT",
            "505 HTTP_VERSION_NOT_SUPPORTED",
            "506 VARIANT_ALSO_NEGOTIATES",
            "507 INSUFFICIENT_STORAGE",
            "508 LOOP_DETECTED",
            "509 BANDWIDTH_LIMIT_EXCEEDED",
            "510 NOT_EXTENDED",
            "511 NETWORK_AUTHENTICATION_REQUIRED"
          ]
        },
        "view": {
          "$ref": "#/definitions/View"
        },
        "viewName": {
          "type": "string"
        }
      }
    },
    "CallTransferDto": {
      "type": "object",
      "properties": {
        "call_id": {
          "type": "integer",
          "format": "int64"
        },
        "date_accept": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "date_create": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "date_received": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "number": {
          "type": "string"
        },
        "performer_accept_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_accept_name": {
          "type": "string"
        },
        "performer_send_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_send_name": {
          "type": "string"
        },
        "recommended_brigades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrigadeScheduleDto"
          }
        },
        "sub_from_id": {
          "type": "integer",
          "format": "int64"
        },
        "sub_from_name": {
          "type": "string"
        },
        "sub_to_id": {
          "type": "integer",
          "format": "int64"
        },
        "sub_to_name": {
          "type": "string"
        }
      }
    },
    "CardResultEkg": {
      "type": "object",
      "properties": {
        "ekg_ch_s_s": {
          "type": "integer",
          "format": "int32"
        },
        "ekg_comments": {
          "type": "string"
        },
        "ekg_rhythm": {
          "type": "string"
        }
      }
    },
    "ListDto«Role»": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CardBrigadePartDto": {
      "type": "object",
      "properties": {
        "br_type_code": {
          "type": "string"
        },
        "br_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "br_type_name": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "name": {
          "type": "string"
        },
        "performers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PerformerDto"
          }
        },
        "picture": {
          "type": "string"
        },
        "sub_code": {
          "type": "string"
        },
        "sub_id": {
          "type": "integer",
          "format": "int64"
        },
        "transport_id": {
          "type": "integer",
          "format": "int64"
        },
        "transport_statemark": {
          "type": "string"
        },
        "workplace_id": {
          "type": "integer",
          "format": "int64"
        },
        "workplace_name": {
          "type": "string"
        }
      }
    },
    "PharmacyMatrixGroupDto": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "group_id": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "matrix_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "BrigadeDutyRequestDto": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "pharmacy_package_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CardResultTherapyPartDto": {
      "type": "object",
      "properties": {
        "therapy": {
          "type": "string"
        }
      }
    },
    "PharmacyCounterpartyDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "is_deleted": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "parent_id": {
          "type": "string"
        }
      }
    },
    "PharmacyMatrixItemDto": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "matrix_id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SendBagDto": {
      "type": "object",
      "properties": {
        "bag_id": {
          "type": "integer",
          "format": "int64"
        },
        "brigade_id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Chronology": {
      "type": "object",
      "properties": {
        "calendarType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "CardObjectiveTonguePart": {
      "type": "object",
      "properties": {
        "tongue_clean_furred": {
          "type": "integer",
          "format": "int32"
        },
        "tongue_clean_furred_name": {
          "type": "string"
        },
        "tongue_weat_dry": {
          "type": "integer",
          "format": "int32"
        },
        "tongue_weat_dry_name": {
          "type": "string"
        }
      }
    },
    "CallDeclarantPartDto": {
      "type": "object",
      "properties": {
        "audio_file_name": {
          "type": "string"
        },
        "declarant_name": {
          "type": "string"
        },
        "declarant_phone": {
          "type": "string"
        },
        "declarant_type_id": {
          "type": "integer",
          "format": "int64"
        },
        "declarant_type_name": {
          "type": "string"
        }
      }
    },
    "LogDto": {
      "type": "object",
      "properties": {
        "action_type": {
          "type": "string"
        },
        "date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "item_id": {
          "type": "integer",
          "format": "int64"
        },
        "item_type": {
          "type": "string"
        },
        "log_type": {
          "type": "string"
        },
        "performer_id": {
          "type": "integer",
          "format": "int64"
        },
        "performer_short_name": {
          "type": "string"
        },
        "subdivision_id": {
          "type": "integer",
          "format": "int64"
        },
        "subdivision_short_name": {
          "type": "string"
        },
        "transmit_error_text": {
          "type": "string"
        },
        "transmit_status": {
          "type": "string"
        }
      }
    },
    "MobileCardChronic": {
      "type": "object",
      "properties": {
        "date": {
          "$ref": "#/definitions/LocalDateTime"
        },
        "diagnosis": {
          "type": "string"
        },
        "doctor": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "FiasAddressObjectDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "full_name": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CardAnamnesisGynecologicPartDto": {
      "type": "object",
      "properties": {
        "gynecologic_anamnesis": {
          "type": "string"
        }
      }
    },
    "Point": {
      "type": "object"
    },
    "PerformerType": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "editable": {
          "type": "boolean"
        },
        "groupCode": {
          "type": "string",
          "enum": [
            "MEDIC",
            "DRIVER",
            "MANAGER"
          ]
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "shortName": {
          "type": "string"
        }
      }
    },
    "CardResultMaterialsDto": {
      "type": "object",
      "properties": {
        "bandages": {
          "type": "integer",
          "format": "int32"
        },
        "catheters": {
          "type": "integer",
          "format": "int32"
        },
        "other_materials": {
          "type": "string"
        },
        "syringes": {
          "type": "integer",
          "format": "int32"
        },
        "transfusion_systems": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "success": {
          "type": "boolean"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "validationErrors": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PerformerDto": {
      "type": "object",
      "properties": {
        "admin_config": {
          "type": "string"
        },
        "change_password": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "first_name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "login": {
          "type": "string"
        },
        "online": {
          "type": "boolean"
        },
        "password": {
          "type": "string"
        },
        "password2": {
          "type": "string"
        },
        "patronymic": {
          "type": "string"
        },
        "roles": {
          "type": "string"
        },
        "second_name": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        },
        "skills": {
          "type": "string"
        },
        "sub_id": {
          "type": "integer",
          "format": "int64"
        },
        "sub_name": {
          "type": "string"
        },
        "type_id": {
          "type": "integer",
          "format": "int64"
        },
        "type_name": {
          "type": "string"
        },
        "user_config": {
          "type": "string"
        },
        "workplace_id": {
          "type": "integer",
          "format": "int64"
        },
        "workplace_name": {
          "type": "string"
        }
      }
    },
    "CardSideOneDto": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/CallFiasAddressDto"
        },
        "brigade": {
          "$ref": "#/definitions/CardBrigadePartDto"
        },
        "declarant": {
          "$ref": "#/definitions/CardDeclarantPartDto"
        },
        "general": {
          "$ref": "#/definitions/CardGeneralPartDto"
        },
        "patient": {
          "$ref": "#/definitions/CardPatientPartDto"
        }
      },
      "description": "Модель данных первой стороны карты вызова"
    }
  }
}
